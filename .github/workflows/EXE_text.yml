# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: AMAI Installer CI

on:
  push:
    branches: [ "devtool" ]
  pull_request:
    paths:
      - 'Electron/**'
      - '.github/workflows/installer.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Electron

    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm run electron:build

    - name: 设置 node 缓存模组
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm`
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: 打包应用
     # run: npm run electron:local
      run: npm run electron:build

    - name: 压缩打包文件
      uses: darshitsri/zip-release@v3
      with:
        filename: amai.zip
        path:  D:/a/AMAI/AMAI/release/win-unpacked
        directory: D:/a/AMAI/AMAI/release/win-unpacked
 
    - name: 上传附件
      uses: actions/upload-artifact@v4
      with:
        path: ./release/win-unpacked/amai.zip

    - name: 下载附件
      uses: actions/download-artifact@v4
      # with:
      #   path: ./release/win-unpacked/amai.zip
