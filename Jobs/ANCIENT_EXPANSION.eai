#IFDEF GLOBAL
    integer ancient_exp_state = 0
    location ancient_exp_loc = null
    unit ancient_exp_wisp = null
    unit ancient_exp_unit = null
    unit ancient_exp_mine = null
    unit ancient_exp_creep = null
    boolean ancient_attack_running = false
    integer anc_retry = 0

#ELSE

function GetAncientCampStrength takes nothing returns integer
  if (ancient_exp_creep != null and UnitAlive(ancient_exp_creep)) then
    // Sum creeps and any enemy structures
    return GetLocationCreepStrength(GetUnitX(ancient_exp_creep), GetUnitY(ancient_exp_creep), creep_battle_radius) + GetLocationEnemyStrength(GetUnitX(ancient_exp_creep), GetUnitY(ancient_exp_creep), creep_battle_radius, true)
  else
    return GetLocationCreepStrength(GetUnitX(ancient_exp_mine), GetUnitY(ancient_exp_mine), expansion_radius) + GetLocationEnemyStrength(GetUnitX(ancient_exp_mine), GetUnitY(ancient_exp_mine), expansion_radius, true)
  endif
endfunction

function AncientExpansionJob takes nothing returns nothing
  local unit u = null
  call DisplayToAllJobDebug("ANCIENT_EXPANSION JOB STARTED")

  if ancient_exp_state == 4 or (ancient_exp_state == 3 and (ancient_exp_unit == null or GetUnitState(ancient_exp_unit, UNIT_STATE_LIFE) <= 0)) then
    call TraceAll("Ancient Exp Ended")
    set ancient_exp_state = 0
    call RemoveLocation(ancient_exp_loc)
    set ancient_exp_creep = null
    set ancient_exp_mine = null
    set ancient_exp_unit = null
    if UnitAlive(ancient_exp_wisp) then
      call RecycleGuardPosition(ancient_exp_wisp)
    endif    
    set ancient_exp_wisp = null
    set ancient_exp_loc = null
    set gold_buffer = 0
    set wood_buffer = 0
    set anc_retry = 0
    set ancient_expanding = false
    return
  endif
  set exp_time_count = ai_time
  if GetAncientCampStrength() <= 0 and ancient_exp_state < 2 then
    // All creeps dead
    set ancient_exp_state = 4
    call TQAddJob(1, ANCIENT_EXPANSION, 0)
    return
  endif
  if ancient_exp_state == 0 then
    call TraceAll("Ancient Exp 0: Await Build Order")
    // Waiting for build code to trigger
    if ancient_exp_mine != current_expansion then
      // Expansion changed before we started building so cancel
      set ancient_exp_state = 4
      call TQAddJob(1, ANCIENT_EXPANSION, 0)
      return
    endif
    set ancient_exp_state = 1
    call TQAddJob(0, ANCIENT_EXPANSION, 0)
  elseif ancient_exp_state == 1 then
    //call Trace("Expansion Distance: " + Int2Str(R2I(GetExpansionDistance())))
    call TraceAll("Ancient Exp 0: Order Wisp")

    if GetGold() < GetUnitGoldCost2(racial_expansion) or GetWood() < GetUnitWoodCost2(racial_expansion) then
      set gold_buffer = GetUnitGoldCost2(racial_expansion)
      set wood_buffer = GetUnitWoodCost2(racial_expansion)
      call TQAddJob(5, ANCIENT_EXPANSION, 0)
      return
    else
      set gold_buffer = 0
      set wood_buffer = 0
      set ancient_exp_wisp = GetExpansionPeon()
      if ancient_exp_wisp == null then
        set ancient_exp_wisp = GetExpansionPeon2(ancient_exp_wisp)
      endif
      if ancient_exp_creep != null and ancient_exp_wisp != null then
          call RemoveGuardPosition(ancient_exp_wisp)
          call IssuePointOrderByIdLoc(ancient_exp_wisp, old_id[racial_expansion], ancient_exp_loc)
          set ancient_exp_state = 2
        call CreateDebugTag("Expansion State 0 - Prep ancient build", 10, ancient_exp_wisp, 3.00, 1.50)
      else
        call CreateDebugTag("Expansion State 0 - no creeps so end", 10, ancient_exp_wisp, 3.00, 1.50)
        set ancient_exp_state = 4
      endif
    endif
    call TQAddJob(5, ANCIENT_EXPANSION, 0)

  elseif ancient_exp_state == 2 then
    call TraceAll("Ancient Exp 1 :" + Int2Str(GetUnitCurrentOrder(ancient_exp_wisp)))
    if ancient_exp_loc == null then
      call TraceAll("ERROR Ancient Exp 1 : null loc")
    endif
    if UnitAlive(ancient_exp_wisp) and GetUnitCurrentOrder(ancient_exp_wisp) != old_id[racial_expansion] then
      call CreateDebugTag("Ancient Exp 1 - Building", 10, ancient_exp_wisp, 3.00, 1.50)
      call RemoveGuardPosition(ancient_exp_wisp)
      set anc_retry = anc_retry + 1
      if anc_retry > 3 then
        set ancient_exp_state = 4 // Got stuck, likely location not buildable or reachable
      else
        set u = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), old_id[racial_expansion], GetLocationX(ancient_exp_loc), GetLocationY(ancient_exp_loc), 270.0) // May fix the order issue
        call RemoveLocation(ancient_exp_loc)
        set ancient_exp_loc = GetUnitLoc(u)
        call RemoveUnit(u)
        set u = null
        call IssuePointOrderByIdLoc(ancient_exp_wisp, old_id[racial_expansion], ancient_exp_loc)
      endif
      call TQAddJob(2, ANCIENT_EXPANSION, 0)
      return  
    elseif ancient_exp_wisp == null or not UnitAlive(ancient_exp_wisp) then
      set ancient_exp_unit = GetOneOfIdNearLoc(ancient_exp_unit, ai_player, old_id[racial_expansion], ancient_exp_loc, 400)
      if ancient_exp_unit == null then
        // End something went wrong
        set ancient_exp_state = 4
      else
          set gold_buffer = 0
          set wood_buffer = 0
          if GetAncientCampStrength() > 0 then
            set ancient_exp_state = 3
          else
            set ancient_exp_state = 5
          endif  
      endif
    else
      set anc_retry = 0 // Order successful so reset retries
    endif
    call TQAddJob(1, ANCIENT_EXPANSION, 0)
  elseif ancient_exp_state == 3 then
    call TraceAll("Ancient Exp 2")
    call CreateDebugTag("Ancient Exp 2: Attack mode", 10, ancient_exp_unit, 3.00, 1.50)
    if ancient_exp_unit == null or not UnitAlive(ancient_exp_unit) then
      set ancient_exp_state = 4
    endif
    call TQAddJob(3, ANCIENT_EXPANSION, 0)
  elseif ancient_exp_state == 5 then
    call CreateDebugTag("Ancient Exp 2: Passive mode", 10, ancient_exp_unit, 3.00, 1.50)
    if ancient_exp_unit == null or not UnitAlive(ancient_exp_unit) then
      set ancient_exp_state = 4
    else
      call RemoveGuardPosition(ancient_exp_unit)
      call IssueImmediateOrderById(ancient_exp_unit, OrderIdCancel)
      call IssueImmediateOrder(ancient_exp_unit, "unroot")
      set ancient_exp_state = 6
    endif
    call TQAddJob(3, ANCIENT_EXPANSION, 0) // time to unroot
  elseif ancient_exp_state == 6 then  
    call CreateDebugTag("Ancient Exp 2: Passive mode End", 10, ancient_exp_unit, 3.00, 1.50)
    call IssueTargetOrder(ancient_exp_unit, "entangle", ancient_exp_mine)
    call TQAddJob(1, ANCIENT_EXPANSION, 0)
    set anc_retry = 0
    set ancient_exp_state = 7
  elseif ancient_exp_state == 7 then
    // Reset ancient
    call CreateDebugTag("Ancient Exp 3: Reset", 10, ancient_exp_unit, 3.00, 1.50)
    if ancient_exp_unit == null or not UnitAlive(ancient_exp_unit) then
      set ancient_exp_state = 4
    elseif UnitAlive(ancient_exp_unit) and GetUnitCurrentOrder(ancient_exp_unit) != OrderId("entangle") and anc_retry < 3 then
      call IssueTargetOrder(ancient_exp_unit, "entangle", ancient_exp_mine)
      set anc_retry = anc_retry + 1
    elseif UnitAlive(ancient_exp_unit) and GetUnitCurrentOrder(ancient_exp_unit) != OrderId("entangle") then
      call RecycleGuardPosition(ancient_exp_unit)
      set ancient_exp_state = 4
    endif
    call TQAddJob(10, ANCIENT_EXPANSION, 0)
  endif
endfunction
#ENDIF
