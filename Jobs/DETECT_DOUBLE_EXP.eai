#IFDEF GLOBAL
    unit double_expansion_target = null
#ELSE
//============================================================================
// Detect double expansion
//============================================================================

function GetOtherExpansionNearby takes unit ru, real tx, real ty returns unit
  local group g = CreateGroup()
  local unit u = null
  //local integer id = 0
  set ru = null
  call GroupEnumUnitsInRange(g, tx, ty, expansion_taken_radius, null)
  set g = SelectByPlayer(g, ai_player, false)
  set g = SelectByAlive2(g, true)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    //set id = GetUnitTypeId(u)
    if IsUnitType(u, UNIT_TYPE_TOWNHALL) == true or IsUnitGoldMine(u) then //or id == oUNDEAD_MINE then//id == oTOWN_HALL or id == oKEEP or id == oCASTLE or id == oUNDEAD_MINE or id == oGREAT_HALL or id == oSTRONGHOLD or id == oFORTRESS or id == oTREE_LIFE or id == oTREE_AGES or id == oTREE_ETERNITY then
      call DestroyGroup(g)
      set g = null
      set ru = u
      set u = null
      return ru
    elseif IsPlayerEnemy(GetOwningPlayer(u), ai_player) and IsUnitType(u, UNIT_TYPE_STRUCTURE) == true then
      set ru = u
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
  return ru
endfunction

function GetTotalClaimedMinesNearby takes unit ru, real tx, real ty returns integer
  local group g = CreateGroup()
  local unit u = null
  local integer count = 0
  set ru = null
  call GroupEnumUnitsInRange(g, tx, ty, expansion_taken_radius, null)
  set g = SelectByPlayer(g, ai_player, false)
  set g = SelectByPlayer(g, Player(PLAYER_NEUTRAL_PASSIVE), false)
  set g = SelectByAlive2(g, true)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if IsUnitType(u, UNIT_TYPE_TOWNHALL) == true or IsUnitGoldMine(u) then //or id == oUNDEAD_MINE then//id == oTOWN_HALL or id == oKEEP or id == oCASTLE or id == oUNDEAD_MINE or id == oGREAT_HALL or id == oSTRONGHOLD or id == oFORTRESS or id == oTREE_LIFE or id == oTREE_AGES or id == oTREE_ETERNITY then
      set count = count + 1
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
  return count
endfunction

function GetTotalMinesNearby takes unit ru, real tx, real ty returns integer
  local group g = CreateGroup()
  local unit u = null
  local integer count = 0
  set ru = null
  call GroupEnumUnitsInRange(g, tx, ty, expansion_taken_radius, null)
  set g = SelectByAlive2(g, true)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if IsUnitGoldMine(u) then
      set count = count + 1
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
  return count
endfunction

function CheckDoubleExpansion takes nothing returns nothing
  local group g = CreateGroup()
  local unit v = null
  local unit u = null
  local player p = null
  call GroupEnumUnitsOfPlayer(g, ai_player, null)
  set g = SelectNumberOfId(g, 100, old_id[racial_expansion])
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    set v = GetOtherExpansionNearby(v, GetUnitX(u), GetUnitY(u))
    if v != null then
      set p = GetOwningPlayer(v)
      if IsPlayerEnemy(ai_player, p) then
        call Trace("Enemy double expansion detected")
        set double_expansion_target = v
      elseif IsPlayerAlly(ai_player, p) and GetTotalClaimedMinesNearby(v, GetUnitX(u), GetUnitY(u)) > GetTotalMinesNearby(v, GetUnitX(u), GetUnitY(u)) then
        call Trace("Ally double expansion detected")
        call IssueImmediateOrderById(u, order_cancel)
      endif
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
  set p = null
  set v = null
endfunction

function DetectDoubleExpJob takes nothing returns nothing
  call DisplayToAllJobDebug("DETECT_DOUBLE JOB START")
  call CheckDoubleExpansion()
  call TQAddJob(10 * sleep_multiplier, DETECT_DOUBLE_EXP, 0)
endfunction
#ENDIF