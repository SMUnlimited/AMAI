#IFDEF GLOBAL

#ELSE
function SetPlayerGold takes player p, integer i returns nothing
  call SetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD,i)
endfunction

function SetPlayerWood takes player p, integer i returns nothing
  call SetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER,i)
endfunction

function IncreasePlayerGold takes player p, integer i returns nothing
//    call Trace(c2s(GetPlayerColor(p))+"gets gold: "+Int2Str(i))
  call SetPlayerGold(p, GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD) + i)
endfunction

function IncreasePlayerWood takes player p, integer i returns nothing
  call SetPlayerWood(p, GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER) + i)
endfunction

function DistributeGold takes integer value returns nothing
  local integer amount = value
  local integer p_amount = value / force_number
  local integer i = 0
  loop
    exitwhen i >= force_number
    if GetPlayerSlotState(own_force[i]) == PLAYER_SLOT_STATE_PLAYING then
      call IncreasePlayerGold(own_force[i], p_amount)
      set amount = amount - p_amount
    endif
    set i = i + 1
  endloop
  call IncreasePlayerGold(ai_player,amount)
endfunction

function DistributeWood takes integer value returns nothing
  local integer amount = value
  local integer p_amount = value / force_number
  local integer i = 0
  loop
    exitwhen i >= force_number
    if GetPlayerSlotState(own_force[i]) == PLAYER_SLOT_STATE_PLAYING then
      call IncreasePlayerWood(own_force[i], p_amount)
      set amount = amount - p_amount
    endif
    set i = i + 1
  endloop
  call IncreasePlayerWood(ai_player,amount)
endfunction

function ExchangeOnce takes nothing returns nothing
  local integer amount = 0
  local integer fix = Max(0, (difficulty - 2))  // Correction double income
  if force_number <= 0 or GetGoldOwned() < 1000 then
    return
  endif
  set amount = GetPlayerGold(ai_player)
  if amount > gold_exchange_level + fix * 250 then  // Positively related to difficulty
    set amount = amount - gold_exchange_level + fix * 150
    if amount > 0 then
      call IncreasePlayerGold(ai_player, -amount)
      call DistributeGold(amount)
    endif
  endif
  set amount = GetPlayerWood(ai_player)
  if amount > wood_exchange_level + fix * 150 then  // Inversely related to difficulty
    set amount = amount - wood_exchange_level + fix * 50
    if amount > 0 then
      call IncreasePlayerWood(ai_player, -amount)
      call DistributeWood(amount)
    endif
  endif
endfunction

function ExchangeJob takes nothing returns nothing
  call DisplayToAllJobDebug("EXCHANGE JOB Start")
  call ExchangeOnce()
  call TQAddJob(30 * sleep_multiplier, EXCHANGE, 0)
endfunction
#ENDIF