#IFDEF GLOBAL
    boolean town_hall_built = false
    real last_expansion_x = 0
    real last_expansion_y = 0
    real next_expansion_x = 0
    real next_expansion_y = 0
    boolean expansion_changed = false

#ELSE
//***************************************************************
//  This job is the modulization of the town hall fast build which will
//  eventually be changed to allow fast build of any building
//***************************************************************
function GetFastBuildPeasantNumber takes nothing returns integer
  local integer minres = Min(GetGold(),GetWood())
  if minres < 40 or GetMinesOwned() == 0 then
    //call Trace("0 fast build peasants")
    return 0
  elseif minres < 250 then
    //call Trace("1 fast build peasant")
    return 1
  elseif minres < 350 then
    //call Trace("2 fast build peasants")
    return 2
  elseif minres < 450 then
    //call Trace("3 fast build peasants")
    return 3
  else
    //call Trace("4 fast build peasants")
    return 4
  endif
endfunction

function GetBuildingBuilt takes unit u returns unit
  local group g = CreateGroup()
  if expansion_changed then
    call GroupEnumUnitsInRange(g, last_expansion_x, last_expansion_y, 1000, null)
  else
    call GroupEnumUnitsInRange(g, next_expansion_x, next_expansion_y, 1000, null)
  endif
  set g = SelectByPlayer(g, ai_player, true)
  set g = SelectNumberOfId(g, 1, old_id[racial_hall[1]])
  set g = SelectByHidden(g, false)
  set g = SelectByAlive(g, true)
  set u = FirstOfGroup(g)
  call DestroyGroup(g)
  set g = null
  return u
endfunction

function FastBuildBuilding takes nothing returns nothing
  local unit u = null
  local group g = null
  local location unitloc = null
  set u = GetBuildingBuilt(u)
  call Trace("Town hall is being built soon")
  if u == null then
    return
  endif
  set unitloc = GetUnitLoc(u)
  set g = CreateGroup()
  call Trace("Town hall is being built")
  call GroupEnumUnitsOfPlayer(g, ai_player,null)
  set g = SelectNumberOfId(g, 50, old_id[racial_militia])
  set g = SelectByHidden(g, false)
  set g = SelectByAlive(g, true)
  if FirstOfGroup(g) == null then
    call GroupClear(g)
    call GroupEnumUnitsOfPlayer(g, ai_player, null)
    set g = SelectNumberOfId(g, 50, old_id[racial_peon])
    set g = SelectByHidden(g, false)
    set g = SelectByAlive(g, true)
  endif
  //call GroupClear(g)
  set g = GetNearestSubGroupOfGroup(g, unitloc, GetFastBuildPeasantNumber())
  call GroupTargetOrder(g, "repair", u)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    call TQAddUnitJob(100, RESET_GUARD_POSITION, 80, u)
    call GroupRemoveUnit(g, u)
  endloop
  call Trace("Fast Build Town Hall")
  set town_hall_built = true
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set u = null
endfunction

function FastBuildCheck takes nothing returns nothing
  if GetUnitX(current_expansion) != next_expansion_x or GetUnitY(current_expansion) != next_expansion_y then
    set last_expansion_x = next_expansion_x
    set last_expansion_y = next_expansion_y
    set next_expansion_x = GetUnitX(current_expansion)
    set next_expansion_y = GetUnitY(current_expansion)
    set expansion_changed = true
  else
    set expansion_changed = false
  endif
  if TownCount(racial_hall[1]) - TownCountDone(racial_hall[1]) > 0 then
    //if expansion_changed and not town_hall_built then
    if not town_hall_built then
      call FastBuildBuilding()
    endif
  else
    set town_hall_built = false
  endif
endfunction

function FastBuild takes nothing returns nothing
  call DisplayToAllJobDebug("FastBuild JOB")
  if current_expansion != null and not towerrush then
    call FastBuildCheck()
  endif
  if not pathing_done then
    call TQAddJob(10, FAST_BUILD, 0)
  endif
endfunction
#ENDIF