#IFDEF GLOBAL
	group windwalk_group = CreateGroup()
    group focus_fire_group = CreateGroup()
	group micro_ranged_group = CreateGroup()
	group micro_enemymelee_group = CreateGroup()
    location last_major_hero_loc = Location(0,0)
	location enemy_melee_loc = Location(0,0)
	unit focus_fire_unit = null
#ELSE
//============================================================================
// Focus Fire Job - Separated from Retreat Control Job by Strategy Master 25/07/05
// Updated - 03/06/06
//============================================================================

function GroupMicroSystem takes group g, group meleeg returns nothing
	local unit u = null
	local location unitloc = null
	local location l = null
	local unit melee = null
	local group copy = null
	
	loop
		set u = FirstOfGroup(g)
		set unitloc = GetUnitLoc(u)
		exitwhen u == null
		set copy = CopyGroup(meleeg)
		set melee = GetNearestOfGroup(copy, unitloc)
		if DistanceBetweenUnits(u, melee) < 400 then
			set l = GetProjectedLoc(unitloc, GetSubtractionLoc_kd(unitloc, GetUnitLoc(melee)), 400)
			call RemoveGuardPosition(u)
			call IssuePointOrderLoc(u, "move", l)
			call RecycleGuardPosition(u)
			call GroupRemoveUnit(focus_fire_group, u) // prevent focus fire controls interrupting
			call RemoveLocation(l)
		endif
		call DestroyGroup(copy)
		call RemoveLocation(unitloc)
		call GroupRemoveUnit(g, u)
	endloop
	set copy = null
	set l = null
endfunction

function GroupOrderFocusWindInstant_d takes group g returns nothing
	local unit u = null
	loop
		set u = FirstOfGroup(g)
		exitwhen u == null
		if (GetUnitAbilityLevel(u, 'AOwk') > 0 or GetUnitAbilityLevel(u, 'ANwk') > 0) then
			//call CreateDebugTag("HARASS: WINDWALK COMMANDED", 10, u, 3.00, 1.50)
			if not IsUnitInGroup(u, windwalk_group) then
				call GroupAddUnit(windwalk_group, u)
				call TQAddUnitJob(8, RESET_WINDWALKER, 0, u)
			endif
			if not UnitInvis(u) then
				call IssueImmediateOrder(u, "windwalk")
			endif
		endif
		call GroupRemoveUnit(g, u)
	endloop
	call DestroyGroup(g)
endfunction

function GroupOrderAttack_d takes group g, unit target returns nothing
	local unit u = null
	loop
		set u = FirstOfGroup(g)
		exitwhen u == null
		call RemoveGuardPosition(u)	
		if UnitInvis(u) then
			call IssueTargetOrder(u, "attack", target)
		endif
		call GroupRemoveUnit(g, u)
	endloop
	call DestroyGroup(g)		
endfunction

function FocusFire takes unit u returns nothing
  local group g = CreateGroup()
  local group t = CreateGroup()
  
  call GroupClear(focus_fire_group)
  call GroupEnumUnitsInRange(g, GetUnitX(u), GetUnitY(u), focus_fire_ranged_dist, null)
  set g = SelectUnittype(g, UNIT_TYPE_RANGED_ATTACKER, true)
  set focus_fire_group = GroupAddGroup(focus_fire_group, g)
  call DestroyGroup(g)
  set g = null
  call GroupEnumUnitsInRange(t, GetUnitX(u), GetUnitY(u), focus_fire_melee_dist, null)
  set t = SelectUnittype(t, UNIT_TYPE_MELEE_ATTACKER, true)
  set focus_fire_group = GroupAddGroup(focus_fire_group, t)
  call DestroyGroup(t)
  set t = CreateGroup()
  call GroupEnumUnitsInRange(t, GetUnitX(u), GetUnitY(u), normal_battle_radius, null)
  set t = SelectByInvisible(t, GetOwningPlayer(u), true)
  set focus_fire_group = GroupAddGroup(focus_fire_group, t)
  call DestroyGroup(t)
  set t = null
  set focus_fire_group = SelectByPlayer(focus_fire_group, ai_player, true)
  if IsUnitType(u, UNIT_TYPE_FLYING) == true then
    set focus_fire_group = SelectUnittype(focus_fire_group, UNIT_TYPE_ATTACKS_FLYING, true)
  endif
  set focus_fire_group = SelectUnittype(focus_fire_group, UNIT_TYPE_PEON, false)
  set focus_fire_group = SelectByUnitStandard(focus_fire_group, true)
  set focus_fire_group = SelectByAlive(focus_fire_group, true)
  //set focus_fire_group = SelectByOrderOr2(focus_fire_group,OrderId("move"),OrderId("attack"),OrderId("stop"), true)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("blizzard"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("flamestrike"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("massteleport"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("earthquake"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("voodoo"), false)	
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("deathanddecay"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("starfall"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("tranquility"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("clusterrockets"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("tornado"), false)
	set focus_fire_group = SelectByOrder(focus_fire_group, OrderId("volcano"), false)
  
  //if FirstOfGroup(micro_enemymelee_group) != null then
//	call GroupMicroSystem(micro_ranged_group, micro_enemymelee_group)   // Remove the units from focus fire group if moving
 // endif
  
  if focus_fire_unit == null or focus_fire_unit != u then
    call CreateDebugTag("Focus fire directly", 10, u, 3.00, 1.50)  
	if IsUnitType(u,UNIT_TYPE_STRUCTURE) == false and not IsUnitOwnedByPlayer(u, Player(PLAYERAGGRESSIVE)) then
		call GroupOrderFocusWindInstant_d(CopyGroup(focus_fire_group))  // Dont want it wasting mana
	endif
	set focus_fire_unit = u
	call GroupTargetOrder(focus_fire_group, "attack", u)
	call GroupOrderAttack_d(CopyGroup(windwalk_group), u) // Invisible units attack directly as normal group order is ignored
  else
    call CreateDebugTag("Focus our fire here", 10, u, 3.00, 1.50)  
	call GroupTargetOrder(focus_fire_group, "attack", u)
	call GroupOrderAttack_d(CopyGroup(windwalk_group), u)	 // Invisible units attack directly as normal group order is ignored
  endif

endfunction

//============================================================================
function FocusFireJob takes nothing returns nothing
  local group g = CreateGroup()
  local unit u = null
  local real hero_min_health = 100000
  local unit hero_min_health_unit = null
  local real range_strength = 0
  local real min_health = 100000
  local unit min_health_unit = null
  local real building_min_health = 100000
  local unit building_min_health_unit = null
  local real disabled_min_health = 100000
  local unit disabled_min_health_unit = null
  local integer enemy_count = 0
  local real unit_life = 0

  call DisplayToAllJobDebug("FOCUSFIRE_CONTROL JOB START")
  
//  if not CaptainRetreating() then
//    call GroupImmediateOrder(focus_fire_group, "stop")
//  endif

  call GroupClear(focus_fire_group)
  call GroupClear(micro_ranged_group)
  call GroupClear(micro_enemymelee_group)

  if major_hero == null or not UnitAlive(major_hero) or IsUnitInGroup(major_hero, unit_healing) then
    set major_hero = GetMajorHeroReplacement_k(last_major_hero_loc)
  endif

 //if retreat_controlled and (attack_running or town_threatened) then
 if not CaptainRetreating() and (attack_running or town_threatened) then

//call DisplayToAll("Focus Fire Job")

  if main_army == -1 or army_loc[main_army] == null or (GetLocationX(army_loc[main_army]) == 0 and GetLocationY(army_loc[main_army]) == 0 ) then
    if major_hero == null then
		call TQAddJob(2 * sleep_multiplier, FOCUSFIRE_CONTROL, 0)
		return
	else
		call GroupEnumUnitsInRange(g,GetUnitX(major_hero),GetUnitY(major_hero),battle_radius,null)
	endif
  else
	call GroupEnumUnitsInRange(g, GetLocationX(army_loc[main_army]), GetLocationY(army_loc[main_army]), battle_radius, null)
  endif
  
  call MoveLocation(enemy_melee_loc, 0,0)  
  
  if town_threatened then
	set g = SelectByPlayer(g, Player(PLAYERAGGRESSIVE), false)
  endif
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    set unit_life = GetUnitState(u, UNIT_STATE_LIFE)
    if unit_life > 0 and not IsUnitHidden(u) then
	    if IsPlayerEnemy(GetOwningPlayer(u), ai_player) and not (UnitInvis(u) and not IsUnitDetected(u, ai_player)) and IsUnitVisible(u, ai_player) then
			if IsUnitType(u, UNIT_TYPE_MELEE_ATTACKER) == true then
				set enemy_melee_loc = GetSumLoc_dd(enemy_melee_loc, GetUnitLoc(u))
				set enemy_count = enemy_count + 1
				call GroupAddUnit(micro_enemymelee_group, u)
			endif
			if IsUnitType(u, UNIT_TYPE_HERO) and UnitAlive(u) then
	          if unit_life < hero_min_health then
	            set hero_min_health = unit_life
	            set hero_min_health_unit = u
	          endif
			else
	          if unit_life < min_health and UnitAlive(u) and (unit_life < GetUnitState(u, UNIT_STATE_MAX_LIFE) or IsUnitType(u, UNIT_TYPE_MELEE_ATTACKER) or IsUnitType(u, UNIT_TYPE_RANGED_ATTACKER) or IsUnitType(u, UNIT_TYPE_TOWNHALL)) then
	            set min_health = unit_life
	            set min_health_unit = u
	          endif
			  if unit_life < disabled_min_health and GetUnitMoveSpeed(u) == 0 and not IsUnitType(u, UNIT_TYPE_STRUCTURE) and UnitAlive(u) then
			  	  set disabled_min_health = unit_life
				  set disabled_min_health_unit = u
			  endif
			  if unit_life < building_min_health and IsUnitType(u, UNIT_TYPE_STRUCTURE) then
				set building_min_health = unit_life
				set building_min_health_unit = u
			  endif
	        endif
	    elseif IsPlayerAlly(GetOwningPlayer(u), ai_player) and UnitAlive(u) then
	            if IsUnitType(u, UNIT_TYPE_RANGED_ATTACKER) == true then
	              set range_strength = range_strength + GetUnitStrength(u)
				  call GroupAddUnit(micro_ranged_group, u)
	            endif
	    endif
	endif
    call GroupRemoveUnit(g,u)
  endloop

  call MoveLocation(last_major_hero_loc, GetUnitX(major_hero), GetUnitY(major_hero))
  set enemy_melee_loc = GetDivisionLoc_d(enemy_melee_loc, I2R(Max(enemy_count, 1)))  
  //if GetLocationX(enemy_melee_loc) != 0 and GetLocationY(enemy_melee_loc) != 0 then 


  //else
//	call DestroyGroup(ranged)
//	set ranged = null
//  endif


    if hero_min_health_unit != null and hero_min_health < focus_fire_limit * range_strength then
      call SetTargetHeroes(true)
      call FocusFire(hero_min_health_unit)
    else
      call SetTargetHeroes(false)
	  if disabled_min_health_unit != null then
		if min_health_unit != null then
		    if min_health * 3 < disabled_min_health then
				call FocusFire(min_health_unit)
			else
				call FocusFire(disabled_min_health_unit)
			endif
		else
			call FocusFire(disabled_min_health_unit)
		endif
	  elseif min_health_unit != null then
	  	call FocusFire(min_health_unit)
	  elseif building_min_health_unit != null then
	    call FocusFire(building_min_health_unit)
	  endif
    endif
 else
	//call GroupRecycleGuardPositionInstant(windwalk_group)
	//loop
	//	set u = FirstOfGroup(windwalk_group)
	//	exitwhen u == null
	//	call GroupRemoveUnit(windwalk_group, u)
	//	if not IsUnitInGroup(u, unit_healing) and not IsUnitInGroup(u, unit_harassing) then
	//		call RecycleGuardPosition(u)
	//	endif
	//endloop
 endif
call DestroyGroup(g)
set g = null 
call TQAddJob(2 * sleep_multiplier, FOCUSFIRE_CONTROL, 0)
endfunction

#ENDIF