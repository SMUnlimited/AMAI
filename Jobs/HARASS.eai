#IFDEF GLOBAL
    constant integer HARASS_TARGET_PEONS = 0
    constant integer HARASS_TARGET_EXPANSION = 1
    constant integer HARASS_TARGET_LOCATION = 2
    constant integer HARASS_TARGET_MAIN_HALL = 3
    integer array harass_time
    integer array harass_size
    integer harass_group_length = 0
    hashtable array harass_groups
    constant integer HARASS_STORE_QTY = 0
    constant integer HARASS_STORE_UNITS = 1
    integer distraction_group = 0
#ELSE
function GetHarassPeonTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  if p != null then
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_PEON, true)
    set g = SelectByAlive(g, true)
    set g = SelectByLoaded(g, false)
    set g = SelectByHidden(g, false) // Hopefully to get peons not currently building
    set ru = GetNearestOfGroup(ru, g, unitloc)
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GetHarassExpansionTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  local location baseloc = null
  if p != null then
    set baseloc = GetPlayerStartLocationLoc(p)
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_TOWNHALL, true)
    set g = SelectByAlive(g, true)
    set g = SelectByHidden(g, false)
    set g = SelectByLocation(g, baseloc, 1000, false)
    set ru = GetNearestOfGroup(ru, g, unitloc)
    call RemoveLocation(baseloc)
    set baseloc = null
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GetHarassLocationTarget takes unit ru, real x, real y returns unit
  local group g = CreateGroup()
  call GroupEnumUnitsInRange(g, x, y, 1000, null)
  set g = SelectByEnemy(g, ai_player, true)
  set g = SelectByAlive(g, true)
  set g = SelectByHidden(g, false)
  set ru = GetLeastHPUnitOfGroup(ru,g)
  set g = null
  return ru
endfunction

function GetHarassMainHallTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  local location baseloc = null
  if p != null then
    set baseloc = GetPlayerStartLocationLoc(p)
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_TOWNHALL, true)
    set g = SelectByAlive(g, true)
    set g = SelectByHidden(g, false)
    set g = SelectByLocation(g, baseloc, 1000, true)
    set ru = GetNearestOfGroup(ru, g, unitloc)
    call RemoveLocation(baseloc)
    set baseloc = null
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GroupOrderWindWalkInstant_d takes group g returns nothing
	local unit u = null
	loop
		set u = FirstOfGroup(g)
		exitwhen u == null
		if GetUnitAbilityLevel(u, 'AOwk') > 0 or GetUnitAbilityLevel(u, 'ANwk') > 0 then
			if not IsUnitInvisible(u, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
				//call CreateDebugTag("HARASS: WINDWALK COMMANDED", 10, u, 3.00, 1.50)
				call IssueImmediateOrder(u, "windwalk")
			endif
		endif
		call GroupRemoveUnit(g, u)
	endloop
	call DestroyGroup(g)
endfunction

function LoadHarassKey takes group harasser returns integer
  local integer i = 0
  loop
    exitwhen i >= max_harass_groups
    if LoadGroupHandle(additional_info, i, HARASS_GROUP) == harasser then  //  find key
      return i
    endif
    set i = i + 1
  endloop
  return -1
endfunction

function HarassJob takes integer ht, unit targ, group harasser returns nothing
  local unit target = targ
  local integer key = LoadHarassKey(harasser)
  local real strength_limit = 0
  local boolean state_attacking = false
  local real flee_percent = 0
  local boolean avoiding_towers = false
  local boolean state_retreat = false
  local real start_strength = 0
  local group g = null
  local unit u = null
  local unit hu = null
  local player p = null
  local real strength_sum = 0
  local real player_sum = 0
  local integer harass_num = 0
  local boolean towersdetected = false
  local integer hiddencount = 0
  local integer timedelay = 0  // Delay count so windwalkers show themselves after a period of waiting
  local boolean healing = false
  call DisplayToAllJobDebug("HARASS JOB START")
  if key < 0 then  // not find key
    call GroupRecycleHarrassPositionInstant(harasser)
    set target = null
    return
  endif
  set strength_limit = LoadReal(additional_info, key, STRENGTH_LIMIT)
  set state_attacking = LoadBoolean(additional_info, key, STATE_ATTACKING)
  set flee_percent = LoadReal(additional_info, key, FLEE_PERCENT)
  set avoiding_towers = LoadBoolean(additional_info, key, AVOID_TOWERS)
  set state_retreat = LoadBoolean(additional_info, key, STATE_RETREAT)
  set start_strength = LoadReal(additional_info, key, START_STRENGTH)
  set hiddencount = LoadInteger(additional_info, key, INVISIBLE_COUNT)
  set timedelay = LoadInteger(additional_info, key, WINDWALK_COUNT)
  if not UnitAliveInGroup(harasser) or (town_threatened and not state_attacking) then
    call SaveBoolean(additional_info, key, STATE_RETREAT, false)
    call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
    call GroupRecycleHarrassPositionInstant(harasser)
    call RemoveSavedHandle(additional_info, key, HARASS_GROUP)
    set target = null
    return
  endif

  if state_retreat then
    if DistanceBetweenPoints_dk(GetUnitLoc(FirstOfGroup(harasser)), home_location) > 1200 then
      call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
      call TQAddGroupJob(2 * sleep_multiplier, HARASS, ht, target, harasser)
      set g = null
    else
      call SaveBoolean(additional_info, key, STATE_RETREAT, false)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
      call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
      call GroupRecycleHarrassPositionInstant(harasser)
      call RemoveSavedHandle(additional_info, key, HARASS_GROUP)
    endif
    set target = null
    return
  endif

  if target != null and (IsUnitHidden(target) or IsUnitLoaded(target) or IsUnitInvisible(target, ai_player)) then	// Checks to see if unit is not targetable and after small period will change to target it can hit
    set hiddencount = hiddencount + 1
  else
    set hiddencount = 0
  endif
  call SaveInteger(additional_info, key, INVISIBLE_COUNT, hiddencount)
  set hu = FirstOfGroup(harasser)
  if target == null or not UnitAlive(target) or hiddencount > 2 then
    if target != null then
      call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
      set g = null
      set target = null
    endif
    if ht == HARASS_TARGET_PEONS then
      set target = GetHarassPeonTarget(target, hu)
    elseif ht == HARASS_TARGET_EXPANSION then
      set target = GetHarassExpansionTarget(target, hu)
    elseif ht == HARASS_TARGET_LOCATION then
      set target = GetHarassLocationTarget(target, LoadReal(additional_info, key, LOCX), LoadReal(additional_info, key, LOCY))
    else
      set target = GetHarassMainHallTarget(target, hu)
    endif
  endif

  //if not state_attacking then	// first run
  if target != null and avoiding_towers and GetLocationTowerStrength(GetUnitX(target), GetUnitY(target), ver_harass_tower_check_radius) > 0 then
    set target = null
  endif
  //endif

  if target != null and UnitAlive(target) then
    if main_army >= 0 and army_loc[main_army] != null and DistanceBetweenPoints_kd(army_loc[main_army],GetUnitLoc(target)) <= 1800 then
      call SaveBoolean(additional_info, key, STATE_RETREAT, false)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
      call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
      call GroupRecycleHarrassPositionInstant(harasser)
      call RemoveSavedHandle(additional_info, key, HARASS_GROUP)
      set target = null
      set hu = null
      return  // major army target , no need harass , just attack
    endif
    set g = CreateGroup()
    //if state_attacking then
    //  call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_attack_melee,null)
    //else
    //  call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_flee_melee,null)
    //endif
    //set g = SelectByAlive(g, true)
    //loop
    //  set u = FirstOfGroup(g)
    //  exitwhen u == null
    //  set p = GetOwningPlayer(u)
    //  if IsPlayerEnemy(ai_player, p) and IsUnitType(u, UNIT_TYPE_MELEE_ATTACKER) and p != Player(PLAYER_NEUTRAL_AGGRESSIVE) and IsUnitType(u, UNIT_TYPE_PEON) == false then
    //    set strength_sum = strength_sum + GetUnitStrength(u)
    //  endif
    //  call GroupRemoveUnit(g, u)
    //endloop

    //call GroupClear(g)
    if state_attacking then
      call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_attack_ranged,null)
    else
      call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_flee_ranged,null)
    endif
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      if UnitAlive(u) and not IsUnitHidden(u) then
        set p = GetOwningPlayer(u)
        if IsPlayerEnemy(ai_player, p) then
          if IsUnitTower(u) and avoiding_towers then
            set towersdetected = true
          endif
          if p != Player(PLAYER_NEUTRAL_AGGRESSIVE) and IsUnitType(u, UNIT_TYPE_RANGED_ATTACKER) and IsUnitType(u, UNIT_TYPE_PEON) == false then
            set strength_sum = strength_sum + GetUnitStrength(u)
          endif
        elseif p == ai_player and IsUnitInGroup(u, harasser) then
          if ht == HARASS_TARGET_LOCATION then
            call CreateDebugTag("Distraction: Harrasing Opponent Location", 10, u, 3.00, 1.50)
          else
            call CreateDebugTag("Harassing Opponent", 10, u, 3.00, 1.50)
          endif
          //if GetUnitState(u, UNIT_STATE_LIFE) <= GetUnitState(u, UNIT_STATE_MAX_LIFE) * flee_percent then
          set healing = IsUnitInGroup(u, unit_healing)
          if GetUnitState(u, UNIT_STATE_LIFE) <= RMax(flee_health_percentage * GetUnitState(u, UNIT_STATE_MAX_LIFE), flee_minimum_health) and not healing and IsUnitType(u, UNIT_TYPE_HERO) == false then // Not used on heroes as micro hero is in control of that
            call GroupAddUnit(unit_healing, u)
            call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
            call TQAddUnitJob(0.5, SEND_HOME, 0, u)  // 0 is home_location
            call GroupRemoveUnit(harasser, u)
            call GroupRemoveUnit(unit_harassing, u)
            set start_strength = start_strength - GetUnitStrength(u)
            call SaveReal(additional_info, key, START_STRENGTH, start_strength)
          elseif healing then // Another system moved unit to healing
            call GroupRemoveUnit(harasser, u)
            call GroupRemoveUnit(unit_harassing, u)
            set start_strength = start_strength - GetUnitStrength(u)
            call SaveReal(additional_info, key, START_STRENGTH, start_strength)
          else
            //call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
            //call TQAddUnitJob(0.5, SEND_HOME, 0, u)  // 0 is home_location
            set harass_num = harass_num + 1
            set player_sum = player_sum + GetUnitStrength(u)
            call RemoveGuardPosition(u)
          endif
          //else

          //endif
        endif
      endif
      call GroupRemoveUnit(g, u)
    endloop
    call DestroyGroup(g)
    set g = null
    set p = null
    set hu = FirstOfGroup(harasser)
    if harass_num <= LoadInteger(additional_info, key, FLEE_NUMBER) or towersdetected or (player_sum <= start_strength * flee_percent and not IsUnitType(hu, UNIT_TYPE_HERO)) then
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
      call SaveBoolean(additional_info, key, STATE_RETREAT, true)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
      //call GroupRecycleGuardPosition(harasser)
      //return
    elseif strength_sum < strength_limit then
      call SaveBoolean(additional_info, key, STATE_RETREAT, false)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, true)
      if hu != null and IsUnitInvisible(hu, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
        set timedelay = timedelay + 1
        call SaveInteger(additional_info, key, WINDWALK_COUNT, timedelay)
      else
        set timedelay = -1	// Not a windwalker harassing so attack immediatly
        call SaveInteger(additional_info, key, WINDWALK_COUNT, 0)
      endif
      if hu != null and DistanceBetweenUnits(hu, target) > 650 then
        if DistanceBetweenUnits(hu, target) <= 5000 then
          call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
          set g = null
        endif
        call CreateDebugTag("HARASS: Move to Target unit", 10, target, 3.00, 1.50)
        call GroupPointOrder(harasser, "move", GetUnitX(target), GetUnitY(target))
      else
        if timedelay >= 5 or timedelay == -1 or (hu != null and IsUnitVisible(hu, GetOwningPlayer(target))) then
          call GroupTargetOrder(harasser, "attack", target)
          //call IssueTargetOrder(hu, "attack", target)
          call CreateDebugTag("HARASS: Attack Target", 10, target, 3.00, 1.50)
        endif
        //call CreateDebugTag("HARASS: Changing Target", 10, hu, 3.00, 1.50)
        //call HarassJob(ht, null, harasser)
        //return
      endif
    // elseif strength_sum >= strength_limit*2 then
    //   call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
    //   call SaveBoolean(additional_info, key, STATE_RETREAT, true)
    //   call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    else
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
      call SaveBoolean(additional_info, key, STATE_RETREAT, true)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    endif
  else
    //call DisplayToAll("Target dead")
    call CreateDebugTag("HARASS: Target Dead", 10, target, 3.00, 1.50)
    call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
    call SaveBoolean(additional_info, key, STATE_RETREAT, true)
    call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
  endif
  call TQAddGroupJob(2, HARASS, ht, target, harasser)
  set target = null
  set hu = null
endfunction

#ENDIF