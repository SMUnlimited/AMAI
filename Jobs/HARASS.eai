#IFDEF GLOBAL
    constant integer HARASS_TARGET_PEONS = 0
    constant integer HARASS_TARGET_EXPANSION = 1
    constant integer HARASS_TARGET_LOCATION = 2
    constant integer HARASS_TARGET_MAIN_HALL = 3
    integer array harass_time
    integer array harass_size
    hashtable harass_groups = null
    integer distraction_group = 0
#ELSE
function GetHarassPeonTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  if p != null then
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_PEON, true)
    set g = SelectByAlive(g, true)
    set g = SelectByLoaded(g, false)
    set g = SelectByHidden(g, false) // Hopefully to get peons not currently building
    set g = SelectByInvisibleAM(g, ai_player, false)
    set ru = GetNearestOfGroup(ru, g, unitloc)
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GetHarassExpansionTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  local location baseloc = null
  if p != null then
    set baseloc = GetPlayerStartLocationLoc(p)
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_TOWNHALL, true)
    set g = SelectByAlive(g, true)
    set g = SelectByHidden(g, false)
    set g = SelectByLocation(g, baseloc, 1000, false)
    set ru = GetNearestOfGroup(ru, g, unitloc)
    call RemoveLocation(baseloc)
    set baseloc = null
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GetHarassLocationTarget takes unit ru, real x, real y returns unit
  local group g = CreateGroup()
  call GroupEnumUnitsInRange(g, x, y, 1000, null)
  set g = SelectByEnemy(g, ai_player, true)
  set g = SelectByAlive(g, true)
  set g = SelectByLoaded(g, false)
  set g = SelectByHidden(g, false)
  set g = SelectByInvisibleAM(g, ai_player, false)
  set ru = GetLeastHPUnitOfGroup(ru,g)
  set g = null
  return ru
endfunction

function GetHarassMainHallTarget takes unit ru, unit u returns unit
  local group g = CreateGroup()
  local location unitloc = GetUnitLoc(u)
  local player p = GetNearestEnemyToLoc_k(unitloc)
  local location baseloc = null
  if p != null then
    set baseloc = GetPlayerStartLocationLoc(p)
    call GroupEnumUnitsOfPlayer(g, p, null)
    set g = SelectUnittype(g, UNIT_TYPE_TOWNHALL, true)
    set g = SelectByAlive(g, true)
    set g = SelectByHidden(g, false)
    set g = SelectByLocation(g, baseloc, 1000, true)
    set ru = GetNearestOfGroup(ru, g, unitloc)
    call RemoveLocation(baseloc)
    set baseloc = null
  endif
  call RemoveLocation(unitloc)
  call DestroyGroup(g)
  set unitloc = null
  set g = null
  set p = null
  return ru
endfunction

function GroupOrderWindWalkInstant_d takes group g returns nothing
	local unit u = null
	loop
		set u = FirstOfGroup(g)
		exitwhen u == null
		if GetUnitAbilityLevel(u, 'AOwk') > 0 or GetUnitAbilityLevel(u, 'ANwk') > 0 then
			if not IsUnitInvisible(u, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
				//call CreateDebugTag("HARASS: WINDWALK COMMANDED", 10, u, 3.00, 1.50)
				call IssueImmediateOrder(u, "windwalk")
			endif
		endif
		call GroupRemoveUnit(g, u)
	endloop
	call DestroyGroup(g)
endfunction

function HarassJob takes integer key, unit target returns nothing
  local integer ht = LoadInteger(additional_info, key, HARASS_TARGET)
  local real strength_limit = LoadReal(additional_info, key, STRENGTH_LIMIT)
  local boolean state_attacking = LoadBoolean(additional_info, key, STATE_ATTACKING)
  local real flee_percent = LoadReal(additional_info, key, FLEE_PERCENT)
  local boolean avoiding_towers = LoadBoolean(additional_info, key, AVOID_TOWERS)
  local integer state_retreat = LoadInteger(additional_info, key, STATE_RETREAT)
  local real start_strength = LoadReal(additional_info, key, START_STRENGTH)
  local unit u = null
  local unit hu = null
  local group g = null
  local group harasser = CreateGroup()
  local player p = null
  local real strength_sum = 0
  local real player_sum = 0
  local boolean b = false
  local integer harass_num = 0
  local boolean towersdetected = false
  local boolean hero_harass = false
  local integer hiddencount = LoadInteger(additional_info, key, INVISIBLE_COUNT)
  local integer timedelay = LoadInteger(additional_info, key, WINDWALK_COUNT) // Delay count so windwalkers show themselves after a period of waiting
  local boolean allair = true
  local integer enemycount = 0
  local boolean healing = false
  call DisplayToAllJobDebug("HARASS JOB START")
  set harasser = ReturnLivingUnitsOfHashtable(additional_info, key, HARASS_UNITGROUP, harasser)
  set harass_num = BlzGroupGetSize(harasser)
  if harass_num == 0 then
    call TraceAll("HARASS ended as no units")
    call SaveInteger(additional_info, key, STATE_RETREAT, 0)
    call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
    call SaveReal(additional_info, key, START_STRENGTH, 0)
    call DestroyGroup(harasser)
    set harasser = null
    set target = null
    return
  endif
  call Trace("HARASS:" + Int2Str(harass_num) + " Units")
  set g = CopyGroup(harasser, g)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if ht == HARASS_TARGET_LOCATION then
      call CreateDebugTag("Distraction: Harrasing Location", 10, u, 3.00, 1.50)
    else
      call CreateDebugTag("Harassing Opponent", 10, u, 3.00, 1.50)
    endif
    set healing = IsUnitInGroup(u, unit_healing)
    if GetUnitState(u, UNIT_STATE_LIFE) <= RMax(flee_health_percentage * GetUnitState(u, UNIT_STATE_MAX_LIFE), flee_minimum_health) and IsUnitType(u, UNIT_TYPE_HERO) == false and not healing then // Not used on heroes as micro hero is in control of that
      call GroupAddUnit(unit_healing, u)
      call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
      call TQAddUnitJob(0.5, SEND_HOME, 0, u)  // 0 is home_location
      call GroupRemoveUnit(harasser, u)
      call GroupRemoveUnit(unit_harassing, u)
      call RemoveUnitFromHashtable(additional_info, key, HARASS_UNITGROUP, u)
      set harass_num = harass_num - 1
    elseif healing then // Another system moved unit to healing
      call GroupRemoveUnit(harasser, u)
      call GroupRemoveUnit(unit_harassing, u)
      call RemoveUnitFromHashtable(additional_info, key, HARASS_UNITGROUP, u)
      set harass_num = harass_num - 1
    else
      set player_sum = player_sum + GetUnitStrength(u)
      if not IsUnitType(u, UNIT_TYPE_FLYING) and allair then
        set allair = false
      endif
    endif
    call GroupRemoveUnit(g, u)
  endloop
  call DestroyGroup(g)
  set g = null
  if IsUnitInGroup(hero_unit[1], harasser) then
    set hu = hero_unit[1]
    set hero_harass = true
  elseif IsUnitInGroup(hero_unit[2], harasser) then
    set hu = hero_unit[2]
    set hero_harass = true
  elseif IsUnitInGroup(hero_unit[3], harasser) then
    set hu = hero_unit[3]
    set hero_harass = true
  endif

  if town_threatened and (not state_attacking or hero_harass) and state_retreat == 0 then
    //call TQAddUnitJob(5 * sleep_multiplier, HARASS, key, target)
    call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
    call SaveReal(additional_info, key, START_STRENGTH, 0)
    call GroupRecycleHarrassPositionInstant(harasser)
    set harasser = null
    set target = null
    set hu = null
    return
  endif
  if hu == null then
    set hu = FirstOfGroup(harasser)
  endif
  if state_retreat == 1 then
    set b = DistanceBetweenPoints_dk(GetUnitLoc(hu), home_location) > 1000
    if hu != null and b then
      set g = CreateGroup()
      call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_flee_ranged,null)
      loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        if IsPlayerEnemy(ai_player, GetOwningPlayer(u)) and UnitAlive(u) and not IsUnitHidden(u) and not IsUnitLoaded(u) then  // GetUnitStrength(u) > 0 then
          set enemycount = enemycount + 1
        endif
        call GroupRemoveUnit(g, u)
      endloop
      call DestroyGroup(g)
      set g = null
    endif
    if hu != null and b and enemycount > 0 then
      call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
      call TQAddUnitJob(3 * sleep_multiplier, HARASS, key, target)
      call DestroyGroup(harasser)
      set g = null
    else
      call TraceAll("HARASS End and Recycle")
      call SaveInteger(additional_info, key, STATE_RETREAT, 0)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
      call SaveInteger(additional_info, key, INVISIBLE_COUNT, 0)
      call SaveReal(additional_info, key, START_STRENGTH, 0)
      call GroupRecycleHarrassPositionInstant(harasser)
    endif
    set harasser = null
    set target = null
    set hu = null
    return
  endif

  if target != null and (IsUnitHidden(target) or IsUnitLoaded(target) or IsUnitInvisibleAM(target, ai_player)) then	// Checks to see if unit is not targetable and after small period will change to target it can hit
    set hiddencount = hiddencount + 1
  else
    set hiddencount = 0
  endif
  call SaveInteger(additional_info, key, INVISIBLE_COUNT, hiddencount)
  set hu = FirstOfGroup(harasser)
  if target == null or not UnitAlive(target) or hiddencount > 2 then
    if target != null then
      call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
      set g = null
      set target = null
    endif
    if ht == HARASS_TARGET_PEONS then
      set target = GetHarassPeonTarget(target, hu)
    elseif ht == HARASS_TARGET_EXPANSION then
      set target = GetHarassExpansionTarget(target, hu)
    elseif ht == HARASS_TARGET_LOCATION then
      set target = GetHarassLocationTarget(target, LoadReal(additional_info, key, LOCX), LoadReal(additional_info, key, LOCY))
    else
      set target = GetHarassMainHallTarget(target, hu)
    endif
    if target == null then
      call TraceAll("HARASS No suitable target")
    endif
  endif

  //if target != null and avoiding_towers and GetLocationTowerStrength(GetUnitX(target), GetUnitY(target), ver_harass_tower_check_radius) > 0 then
    //  set target = null
  //endif

  if target != null and UnitAlive(target) then
    call GroupRemoveGuardPositionInstant(harasser)
    set g = CreateGroup()
    if state_attacking then
      call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_attack_ranged,null)
    else
      call GroupEnumUnitsInRange(g,GetUnitX(hu),GetUnitY(hu),harass_radius_flee_ranged,null)
    endif
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      set p = GetOwningPlayer(u)
      if IsPlayerEnemy(ai_player, p) and p != Player(PLAYER_NEUTRAL_AGGRESSIVE) and UnitAlive(u) and not IsUnitHidden(u) and (not allair or IsUnitType(u, UNIT_TYPE_ATTACKS_FLYING)) then
        if not towersdetected and avoiding_towers and IsUnitTower(u) then
          set towersdetected = true
        endif
        if not IsUnitType(u, UNIT_TYPE_PEON) then
          set strength_sum = strength_sum + GetUnitStrength(u)
        endif
      endif
      call GroupRemoveUnit(g, u)
    endloop
    call DestroyGroup(g)
    set g = null
    set p = null
    set hu = FirstOfGroup(harasser)
    if harass_num <= LoadInteger(additional_info, key, FLEE_NUMBER) or towersdetected or (player_sum <= start_strength * flee_percent) then // player strength is flee_percent weaker than it was
      call CreateDebugTag("HARASS: Flee reached", 10, target, 3.00, 1.50)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
      call SaveInteger(additional_info, key, STATE_RETREAT, 1)
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
    elseif strength_sum < strength_limit then
      call SaveBoolean(additional_info, key, STATE_ATTACKING, true)
      if hu != null and IsUnitInvisible(hu, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
        set timedelay = timedelay + 1
        call SaveInteger(additional_info, key, WINDWALK_COUNT, timedelay)
      else
        set timedelay = -1	// Not a windwalker harassing so attack immediatly
        call SaveInteger(additional_info, key, WINDWALK_COUNT, 0)
      endif
      if hu != null and DistanceBetweenUnits(hu, target) > 650 then
        if DistanceBetweenUnits(hu, target) <= 5000 then
          call GroupOrderWindWalkInstant_d(CopyGroup(harasser,g))
          set g = null
        endif
        call CreateDebugTag("HARASS: Move to Target unit", 10, target, 3.00, 1.50)
        call GroupPointOrder(harasser, "move", GetUnitX(target), GetUnitY(target))
      else
        if timedelay >= 5 or timedelay == -1 or (hu != null and IsUnitVisible(hu, GetOwningPlayer(target))) then
          call GroupTargetOrder(harasser, "attack", target)
          //call IssueTargetOrder(hu, "attack", target)
          call CreateDebugTag("HARASS: Attack Target", 10, target, 3.00, 1.50)
        endif
      endif
    else
      if strength_sum >= strength_limit*2 then
        call CreateDebugTag("HARASS: Enemy Strength large so flee2", 10, target, 3.00, 1.50)
      else
        call CreateDebugTag("HARASS: Enemy Strength large so flee", 10, target, 3.00, 1.50)
      endif
      call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
      call SaveInteger(additional_info, key, STATE_RETREAT, 1)
      call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
    endif
  else
    //call DisplayToAll("Target dead")
    call CreateDebugTag("HARASS: Target Dead", 10, target, 3.00, 1.50)
    call GroupPointOrder(harasser, "move", GetLocationX(home_location), GetLocationY(home_location))
    call SaveInteger(additional_info, key, STATE_RETREAT, 1)
    call SaveBoolean(additional_info, key, STATE_ATTACKING, false)
  endif
  call TQAddUnitJob(2, HARASS, key, target)
  call DestroyGroup(harasser)
  set harasser = null
  set hu = null
endfunction
#ENDIF