#IFDEF GLOBAL
  integer item_exp_state = 0
  integer item_exp_but_count = 0
  unit itemhero = null
  boolean item_attack_ruard = false
  boolean expitem_buy = false
  location item_exp_guard_loc = Location(0,0)
#ELSE

function ItemExpansionReset takes nothing returns nothing
  call RecycleGuardPosition(itemhero)
  set item_expanding = false
  set expitem_buy = false
  set item_exp_state = 0
  set item_exp_but_count = 0
  set not_taken_expansion = null
  set itemhero = null
endfunction

function UseExpansionItem takes item t returns nothing
  local unit tempu = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), old_id[racial_expansion], GetUnitX(current_expansion), GetUnitY(current_expansion), 270.0)
  local real x = GetUnitX(tempu)
  local real y = GetUnitY(tempu)
  local location l = GetUnitLoc(current_expansion)
  local location loc = Location(x, y)
  call RemoveUnit(tempu)
  set tempu = null
  call RemoveGuardPosition(itemhero)
  call UnitUseItemPoint(itemhero, t, x, y)
  call RemoveLocation(item_exp_guard_loc)
  set item_exp_guard_loc = AIGetProjectedLoc(l, loc, 850, 0)  //Guarding position
  set item_attack_ruard = true
  call RemoveLocation(loc)
  set loc = null
  call RemoveLocation(l)
  set l = null
endfunction

function ItemExpansionJob takes nothing returns nothing
  local unit u = null
  local item exp_item = null
  local integer time_next_try = 5
  call DisplayToAllJobDebug("ITEM_EXPANSION JOB STARTED")
  if (itemhero != null and GetUnitState(itemhero, UNIT_STATE_LIFE) <= 0) or town_threatened or current_expansion == null then
    call Trace("Item expansion : Cannot Expansion or no expansion")  // no call ChooseExpansion() , this is passive expansion , avoidance buy repeat item
    call ItemExpansionReset()
    return
  endif
  set exp_time_count = ai_time
  set u = GetExpFoe(u)
  if item_exp_state == 0 then
    call Trace("Item expansion state 0 - Check Expansion Hero and Location , Distance :" + Int2Str(R2I(GetExpansionDistance())))
    set exp_item = GetItemOfType(exp_item,race_item_expansion_item_id)
    if exp_item == null then
      set u = null
      if expitem_buy == false then
        if GetGold() < gold_price[race_item_expansion_item_id] + 120 or GetWood() < wood_price[race_item_expansion_item_id] + 80 then
          call Trace("Item expansion state 0 - No gold or wood")
          set item_expanding = false
          set not_taken_expansion = null
          return
        endif
        set expitem_buy = true
        call TQAddJob(5, BUY_ITEM, race_item_expansion_item_id)
      elseif item_exp_but_count > 3 and not shop_ordered then
        call Trace("Item expansion state 0 - but item timeout")
        set item_expanding = false
        set expitem_buy = false
        set item_exp_but_count = 0
        set not_taken_expansion = null
        return
      else
        set item_exp_but_count = item_exp_but_count + 1
      endif
      call TQAddJob(20, ITEM_EXPANSION, 0)
      return
    endif
    set itemhero = GetItemHero(exp_item)
    call SetItemDroppable(exp_item, false)  //prevent droppable
    call SetItemPawnable(exp_item, false)  //prevent selling
    set not_taken_expansion = current_expansion
    set item_exp_but_count = 0
    if u == null and not CheckExpansionTaken(current_expansion) then
      call CreateDebugTag("Item expansion state 0 - use item", 10, itemhero, 3.00, 1.50)
      call UseExpansionItem(exp_item)
      set item_exp_but_count = 0
      set item_exp_state = 2
      set exp_item = null
      return
    endif
    call CreateDebugTag("Item expansion state 0 to 1", 10, itemhero, 3.00, 1.50)
    set item_exp_state = 1
    set time_next_try = 1
  elseif item_exp_state == 1 then
    if u == null then
      call Trace("Item expansion state 2 - Rush Expansion done")
      set item_exp_state = 2
      set time_next_try = 1
    elseif item_exp_but_count > 3 then
      call Trace("Item expansion state 1 - Wait rush end , not rush")
      call ItemExpansionReset()
      set u = null
      return
    else
      call Trace("Item expansion state 1 - Wait rush Expansion")
      set item_exp_but_count = item_exp_but_count + 1
      set time_next_try = 40
    endif
  elseif item_exp_state == 2 then
    set exp_item = GetItemOfType(exp_item,race_item_expansion_item_id)
    set itemhero = GetItemHero(exp_item)  //prevent hero not item
    if itemhero != null and exp_item != null and not CheckExpansionTaken(current_expansion) then
      call CreateDebugTag("Item expansion state 2 - use item", 10, itemhero, 3.00, 1.50)
      call UseExpansionItem(exp_item)
      set time_next_try = 1
    else
      call Trace("Item expansion state 2 - End")
      call ItemExpansionReset()
      if exp_item != null then
        call Trace("Item expansion state 2 - End , not use item")
        call SetItemDroppable(exp_item, true)  //can droppable
        call SetItemPawnable(exp_item, true)  //can selling
        set exp_item = null
      endif
      set u = null
      return
    endif
  endif
  set exp_item = null
  set u = null
  call TQAddJob(time_next_try, ITEM_EXPANSION, 0)
endfunction
#ENDIF