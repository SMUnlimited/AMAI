#IFDEF GLOBAL
#ELSE
// ################### Mana Fountain Control ##############################
// #  Created by Strategy Master 19/02/05. In principle its exactly the same
// #  as the healing fountain job. All thats different is how its called from the retreat job.
// ########################################################################
function GetManaFountainID takes nothing returns integer
  if nearest_neutral[NEUTRAL_POWER_FOUNTAIN] == null then
    return NEUTRAL_MANA_FOUNTAIN
  endif
  return NEUTRAL_POWER_FOUNTAIN
endfunction

function GetManaFountainUnit takes nothing returns unit
  if nearest_neutral[NEUTRAL_POWER_FOUNTAIN] == null then
    return nearest_neutral[NEUTRAL_MANA_FOUNTAIN]
  endif
  return nearest_neutral[NEUTRAL_POWER_FOUNTAIN]
endfunction

function ManaFountainJob takes unit u, integer p returns nothing

local real distance = 0
local real unitstrengt = 0
local real x = 0
local real y = 0
local unit fountain = GetManaFountainUnit() 
local integer detectedenemies = 0
local integer enemiesatfountain = 0
local boolean creepsawake = false

  call DisplayToAllJobDebug("MANA_FOUNTAIN Start")
  // if fountain == null then
  //   set fountain = nearest_neutral[NEUTRAL_MANA_FOUNTAIN]
  // endif
  call RemoveGuardPosition(u)
  if GetUnitState(u, UNIT_STATE_LIFE) <= 0 then
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
    set fountain = null
    return
  elseif fountain == null then
    call TQAddUnitJob(2, SEND_HOME, GetRandomInt(0,Max(exist_town_num-1,0)), u)
    return
  endif
  set x = GetUnitX(fountain)
  set y = GetUnitY(fountain)
  set detectedenemies = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 1000) 
  set enemiesatfountain = GetLocationNonCreepStrength(x, y, 1000)
  set creepsawake = IsCreepsAwake(x, y, 1000)
  set unitstrengt = GetUnitStrength(u)
  set distance = DistanceBetweenUnits(u, fountain)
  if (distance <= 600 and (detectedenemies >= unitstrengt or creepsawake)) or (difficulty == HARD and (enemiesatfountain >= unitstrengt or creepsawake)) then
    call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
    call TQAddUnitJob(8, RESET_GUARD_POSITION, p, u)
  elseif GetUnitState(u, UNIT_STATE_MANA) >= GetUnitState(u, UNIT_STATE_MAX_MANA) * (I2R(p)/100) then
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
  else
    if distance >= buy_distance then
      if GetUnitAbilityLevel(u, 'AIhm') > 0 or (GetUnitAbilityLevel(u, 'Ashm') > 0 and GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800) > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) <= 6)) then
        call IssueImmediateOrder(u, "ambush")
      elseif GetUnitCurrentOrder(u) != OrderId("move") then
        call IssuePointOrder(u, "move", x, y)
      endif
    else
      if IsUnitInvisible(u, Player(PLAYER_NEUTRAL_AGGRESSIVE)) then  //no need do anything
      elseif GetUnitAbilityLevel(u, 'AIhm') > 0 or (GetUnitAbilityLevel(u, 'Ashm') > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) <= 6)) then
        call IssueImmediateOrder(u, "ambush")
      elseif not IsUnitType(u, UNIT_TYPE_FLYING) and GetUnitCurrentOrder(u) != OrderId("patrol") then
        call IssuePointOrder( u, "patrol", x + GetRandomReal(-100,100), y + GetRandomReal(-100,100))  //Prevent units from being blocked by other units coming from behind when leaving
      endif
    endif
    call TQAddUnitJob(8, MANA_FOUNTAIN, p, u)
  endif
  set fountain = null
endfunction
#ENDIF
