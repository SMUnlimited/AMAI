#IFDEF GLOBAL

boolean militia_expanding = false
boolean militia = true
integer militia_time_count = 0
integer militia_time_out = 100  // value * 3 seconds
integer militia_state = 0
unit militia_builder = null
unit militia_fastb1 = null
unit militia_fastb2 = null
unit militia_fastb3 = null
//unit militia_expansion = null
location militia_loc = null

#ELSE

function GetMilitiaExpansionLoc takes integer unitid returns nothing
  local unit u = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), unitid, GetUnitX(current_expansion), GetUnitY(current_expansion), 270.0)
  if DistanceBetweenUnits(u, current_expansion) <= race_max_expa_mine_distance then
    set militia_loc = GetUnitLoc(u)
  endif
  call RemoveUnit(u)
  set u = null
endfunction

function MilitiaExpansionReset takes nothing returns nothing
	set gold_buffer = 0
	set wood_buffer = 0
	set militia_time_count = 0
	set militia_state = 0
	set militia_expanding = false
	set current_expansion = null
	set not_taken_expansion = null
endfunction

function TryMilitiaExpansionFoot takes nothing returns nothing
local group g = null
local unit u = null
local integer ownstrength = 0
local integer expansionstrength = 0
local location l = null
local boolean buildone = false

	call DisplayToAllJobDebug("MILITIA_EXPAND JOB START")

	if take_exp and current_expansion == null then
		call ChooseExpansion()
	endif
	if not take_exp or current_expansion == null or towerrush or GetMinesOwned() >= 2 then  // have mine , peon need harvest
		call MilitiaExpansionReset()
		call Trace("MILITIA_EXPAND : not take expansion")
		call TQAddJob(50, MILITIA_EXPAND, 0)
		return
	endif
	set ownstrength = GetOwnStrength()
	if militia_state < 3 then
		set gold_buffer = GetUnitGoldCost2(racial_expansion)
		set wood_buffer = GetUnitWoodCost2(racial_expansion)
	endif
	if militia_state == 0 then
		call Trace("Expansion Distance: " + Int2Str(R2I(GetExpansionDistance())))
		set expansionstrength = GetExpansionStrength()
		//if GetExpansionDistance() <= 6600 and expansionstrength < 20 then //and militia_time_count < militia_time_out then //and expansionstrength < 36 then // and hero[1] == racial_militiahero then
		if GetExpansionDistance() <= 5800 and expansionstrength < 20 then
			call Trace("Our Strength:" + Int2Str(ownstrength) + " Expansion Strength:" + Int2Str(expansionstrength))
			if TownCountDone(hero[1]) > 0 and not town_threatened and ownstrength >= minimum_attack_strength and TownCountDone(racial_peon) > 6 and ownstrength + 6 >= expansionstrength then
				set current_expansion = not_taken_expansion
				if GetGold() >= gold_buffer and GetWood() >= wood_buffer then
					if expansionstrength <= 0 then
						set militia_state = 2
						call Trace("Militia state 0 to 2")
					else
						call Trace("Militia state 0 to 1")
						set militia_state = 1
					endif
					set militia_expanding = true
					call TQAddJob(7, MILITIA_EXPAND, 0)
					return
				endif
			endif
		else
			call MilitiaExpansionReset()
			call Trace("Militia state 0 Ended , expansion too far or creep too weak ")
		endif
	elseif militia_state == 1 then
		call Trace("Militia state 1 rush expansion")
		set expansionstrength = GetExpansionStrength()
		if ownstrength + 6 < expansionstrength or militia_time_count > 3 then
			call MilitiaExpansionReset()
			call Trace("Militia state 1 creep too powerful or cannot rush , stop trying to expand")
		elseif expansionstrength <= 0 then
			set militia_state = 2
			set militia_time_count = 0
			call Trace("Militia state 1 to 2")
			call TQAddJob(2, MILITIA_EXPAND, 0)
			return
		elseif militia_time_count <= 3 then
			call Trace("Militia state 1 wait rush")
			set militia_time_count = militia_time_count + 1
			call TQAddJob(15, MILITIA_EXPAND, 0)
		endif
	elseif militia_state == 2 then
		call Trace("Militia state 2 get militia")
		set g = CreateGroup()
		call GroupEnumUnitsOfPlayer(g, ai_player,null)
		set g = SelectNumberOfId(g, 50, old_id[racial_militia])
		set g = SelectByHidden(g, false)
		set g = SelectByAlive(g, true)
		if FirstOfGroup(g) == null then
			call GroupClear(g)
			call GroupEnumUnitsOfPlayer(g, ai_player, null)
			set g = SelectNumberOfId(g, 50, old_id[racial_peon])
			set g = SelectByHidden(g, false)
			set g = SelectByAlive(g, true)
		endif
		set l = GetUnitLoc(current_expansion)
		set g = GetNearestSubGroupOfGroup(g, l, 4)
		call RemoveLocation(l)
		set l = null
		set militia_builder = FirstOfGroup(g)
		//call GroupRemoveUnit(g, militia_builder)
		//set militia_fastb1 = FirstOfGroup(g)
		//call GroupRemoveUnit(g, militia_fastb1)
		//set militia_fastb2 = FirstOfGroup(g)
		//call GroupRemoveUnit(g, militia_fastb2)
		//set militia_fastb3 = FirstOfGroup(g)
		call DestroyGroup(g)
		set g = null
		if militia_builder != null then
			set militia_state = 3
			call Trace("Militia state 2 to 3")
			call TQAddJob(2, MILITIA_EXPAND, 0)
			return
		elseif militia_time_count < 3 then
			call Trace("Militia state 2 wait get peon")
			set militia_time_count = militia_time_count + 1
			call TQAddJob(2, MILITIA_EXPAND, 0)
			return
		else
			call MilitiaExpansionReset()
			call Trace("Militia state 2 Ended , not peon")
		endif
	elseif militia_state == 3 then
		if militia_builder == null or GetUnitState(militia_builder, UNIT_STATE_LIFE) <= 0 or CheckExpansionTaken(current_expansion) or GetGold() < GetUnitGoldCost2(racial_expansion) or GetWood() < GetUnitWoodCost2(racial_expansion) then
			call MilitiaExpansionReset()
			set buildone = true
			call RemoveLocation(militia_loc)
			set militia_loc = null
			call RecycleGuardPosition(militia_builder)
			set militia_builder = null
			call Trace("Militia state 3 Ended , lost peon or expansion by other player take or no gold or no wood")
		else
			call RemoveGuardPosition(militia_builder)  // has to be here or peasant comes off construction
			if DistanceBetweenUnits(militia_builder, current_expansion) < 800 then
				//call IssueTargetOrder(militia_fastb1, "stop", current_expansion)
				//call IssueTargetOrder(militia_fastb2, "stop", current_expansion)
				if militia_loc == null then
					call GetMilitiaExpansionLoc(old_id[racial_expansion])
				endif
				if militia_loc != null then
					call IssuePointOrderByIdLoc(militia_builder, old_id[racial_expansion], militia_loc)
					if race_has_power_build then
						call FastBuildCheck()
					endif
					call TQAddUnitJob(200, RESET_GUARD_POSITION_ONLY, 80, militia_builder)
					call Trace("Militia state 3 , Build Success")
				else
					call RecycleGuardPosition(militia_builder)
					call Trace("Militia state 3 , Build Fail")
				endif
				call MilitiaExpansionReset()
				set buildone = true
			else
				call Trace("Militia state 3 , Moving expansion")
				call IssueTargetOrder(militia_builder, "move", current_expansion)
			endif
		endif
		if not buildone then
			call TQAddJob(3, MILITIA_EXPAND, 0)
			return
		endif
	endif
	if not pathing_done then
		call TQAddJob(50, MILITIA_EXPAND, 0)
	endif
endfunction

#ENDIF