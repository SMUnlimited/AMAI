#IFDEF GLOBAL
	unit nearest_moon_well = null

#ELSE

function GetMoonWell takes player p, integer id returns unit
   local unit u = null
   local group g = CreateGroup()     
   call GroupEnumUnitsOfPlayer(g, p, null)
   set g = SelectByAlive(g, true)
   loop
     set u = FirstOfGroup(g)
     exitwhen u == null
     if GetUnitTypeId(u) == id and GetUnitState(u, UNIT_STATE_MANA) >= 30 then
       call DestroyGroup(g)
       set g = null
       return u
     endif
     call GroupRemoveUnit(g, u )
   endloop
   call DestroyGroup(g)
   set g = null
   return null

endfunction

function HeadtoMoonWell takes unit u, integer p returns nothing
    local real dist = 0
    local real enemystrength = 0
    set dist = DistanceBetweenUnits(u, nearest_moon_well)
    set enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
    if dist >= 1000 and enemystrength > 0 and ((GetUnitState(u, UNIT_STATE_MANA) > 50 and GetUnitAbilityLevel(u, 'AEbl') >= 1) or (GetUnitState(u, UNIT_STATE_MANA) > 10 and GetUnitAbilityLevel(u, 'AEbl') > 1)) then
        call IssuePointOrder(u, "blink", GetUnitX(nearest_moon_well), GetUnitY(nearest_moon_well))
        call IssuePointOrder(u, "smart", GetUnitX(nearest_moon_well), GetUnitY(nearest_moon_well))
        call TQAddUnitJob(4, MOON_WELL_CONTROL, p, u)
    elseif dist >= 1000 and GetUnitAbilityLevel(u, 'Ashm') > 0 and enemystrength > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) and not IsUnitType(u, UNIT_TYPE_HERO) then
        call IssueImmediateOrder(u, "ambush")
        call TQAddUnitJob(4, MOON_WELL_CONTROL, p, u)				
    else
      call IssuePointOrder(u, "smart", GetUnitX(nearest_moon_well), GetUnitY(nearest_moon_well))
      call TQAddUnitJob(4, MOON_WELL_CONTROL, p, u)
    endif
endfunction

function MoonWellJob takes unit u, integer p returns nothing
  local location l = null
  local real dist = 0
  local real enemystrength = 0

  call DisplayToAllJobDebug("MOON_WELL_CONTROL JOB START")
  if GetUnitState(u, UNIT_STATE_LIFE) <= 0 then
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
    return
  elseif GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) * (I2R(p)/100) or IsUnitType(u, UNIT_TYPE_SUMMONED) then
    call GroupRemoveUnit(unit_healing, u)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
    return
  elseif nearest_moon_well == null or GetUnitState(nearest_moon_well, UNIT_STATE_MANA) < 30 then
    set nearest_moon_well = GetMoonWell(ai_player, old_id[racial_farm])
    if nearest_moon_well == null then	  
        set l = GetUnitLoc(u)
        set dist = DistanceBetweenPoints(l, home_location)
        set enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
        if dist >= 1000 and enemystrength > 0 and ((GetUnitState(u, UNIT_STATE_MANA) > 50 and GetUnitAbilityLevel(u, 'AEbl') == 1) or (GetUnitState(u, UNIT_STATE_MANA) > 10 and GetUnitAbilityLevel(u, 'AEbl') > 1)) then
            call IssuePointOrder(u, "blink", GetLocationX(home_location), GetLocationY(home_location))
            call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
            call TQAddUnitJob(2, SEND_HOME, p, u)
        elseif dist >= 1000 and enemystrength > 0 and GetUnitAbilityLevel(u, 'Ashm') > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) and not IsUnitType(u, UNIT_TYPE_HERO) then
            call IssueImmediateOrder(u, "ambush")
            call TQAddUnitJob(4, MOON_WELL_CONTROL, p, u)
        elseif dist >= 1000 then
            call IssuePointOrder(u, "move", GetLocationX(home_location), GetLocationY(home_location))
            call TQAddUnitJob(4, MOON_WELL_CONTROL, p, u)
        elseif IsUnitType(u,UNIT_TYPE_HERO)==true then
          call TQAddUnitJob(2, SEND_HOME, p, u)
        else
          call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
        endif
        call RemoveLocation(l)
        set l = null
    else
      call HeadtoMoonWell(u, p)
    endif
  else
    call HeadtoMoonWell(u, p)
  endif

endfunction

#ENDIF