#IFDEF GLOBAL
    unit major_hero = null
    real battle_radius = 1500
    real normal_battle_radius = 1500  // units within that radius are considered belonging to the current battle
    real creep_battle_radius = 750  // same as with normal_battle_radius, but for battles against creeps
    boolean retreat_controlled = false
    location home_location = null
    real enemy_strength_sum = 0
    real ally_strength_sum = 0
    boolean canflee = false
    boolean isfleeing = false
    integer added_target_aggression = 0  // The current bonus aggression added to current attack specified in the profiles
    integer added_racial_aggression = 0  // The current bonus added to current attack based on which race amai is attacking

    location enemy_loc = Location(0,0)
    location last_enemy_loc = Location(0,0)
    location ally_loc = Location(0,0)
    location last_ally_loc = Location(0,0)
#ELSE

//============================================================================
// Retreat Control Job //Updated by Strategy Master 26/07/05
//============================================================================
//
function RetreatControlJob takes nothing returns nothing
  local group g = null
  local real ally_sum = 0
  local real enemy_sum = 0
  local real creep_sum = 0
  local unit u = null
  local real unit_strength = 0
  local real unit_life = 0
  local real unit_mana = 0
  //local group g_battle = CreateGroup()
  local real enemy_ranged_strength = 0
  local real ally_ranged_strength = 0
  local integer num_units = 0
  local real ally_strength = 0
  local real enemy_strength = 0
  local real xa = 0
  local real ya = 0
  local real xe = 0
  local real ye = 0
  local integer i = 0

  // local variables used to calculate roughly where the current enemy army is located at
  local integer ally_count = 0
  local integer enemy_count = 0
  local boolean usearmy = true
  call DisplayToAllJobDebug("RETREAT_CONTROL JOB Start")

  if major_hero == null or not UnitAlive(major_hero) then
    set major_hero = GetMajorHeroReplacement_k(major_hero,last_major_hero_loc)
  endif

	//   call GroupEnumUnitsInRange(g_battle,GetUnitX(major_hero),GetUnitY(major_hero),battle_radius,null)
	//loop
	//  	set u = FirstOfGroup(g_battle)
	//	exitwhen u == null
	//	if UnitAlive(u) and IsPlayerAlly(GetOwningPlayer(u), ai_player) and IsUnitType(u, UNIT_TYPE_RANGED_ATTACKER) then
	//		set ally_ranged_strength = ally_ranged_strength + GetUnitStrength(u)
	//	else
	//		if UnitAlive(u) and IsPlayerEnemy(GetOwningPlayer(u),ai_player) and IsUnitType(u, UNIT_TYPE_RANGED_ATTACKER) then
	//			set enemy_ranged_strength = enemy_ranged_strength + GetUnitStrength(u)
	//			set num_units = num_units + 1
	//		endif
	//	endif
	//	if UnitAlive(u) and IsPlayerAlly(GetOwningPlayer(u), ai_player) then
	//		set ally_strength = ally_strength + GetUnitStrength(u)
	//	else
	//		if UnitAlive(u) and IsPlayerEnemy(GetOwningPlayer(u),ai_player) then
	//			set enemy_strength = enemy_strength + GetUnitStrength(u)
	//		endif
	//	endif
	//	call GroupRemoveUnit(g_battle,u)
	//endloop
	//call DestroyGroup(g_battle)
	//set g = null

//  if attack_running then
//	if (not (major_hero != null and UnitAlive(major_hero)) and ver_heroes) or CaptainRetreating() or (ally_strength * 3) < enemy_strength then
//		call DisplayToAll("Retreat control ended")
//  		set break_attack = true
//   		set retreat_controlled = false
//		call SetGroupsFlee(true)
//		return
//	endif
//	if not disableretreat then
//		if enemy_ranged_strength > 0 and num_units >= 3 and (ally_strength * 3) < enemy_ranged_strength then
//			call SetUnitsFlee(false)
//		else
//			call SetUnitsFlee(true)
//		endif
//	else
//		// This is if flee control is turned off as the inbuilt unit flee does not help in low hp race mods
//		call SetUnitsFlee(false)
//		call SetHeroesFlee(false)
//	endif
//  else
//	if (not (major_hero != null and UnitAlive(major_hero)) and ver_heroes) or CaptainRetreating() or (ally_strength * 3) < enemy_strength  then
//		call DisplayToAll("Retreat control ended")
//  		set break_attack = false
//    		set retreat_controlled = false
//		call SetGroupsFlee(true)
//		return
//	endif
//      if disableretreat then
//		call SetUnitsFlee(false)
//		call SetHeroesFlee(false)
//	endif
//  endif

if not retreat_controlled then
  return
endif

if not isfleeing and canflee and (CaptainRetreating() or CaptainIsHome()) then
  call TraceAll("RETREAT_CONTROL: Natural Flee !!!")
  set isfleeing = true
endif

if ((not attack_running and not isfleeing) or isfleeing or (town_threatened and town_threat_break) or player_defeated) then
    set break_attack = attack_running
    call TraceAll("RETREAT: Pending End fleeing:" + B2S(isfleeing))
    if CaptainIsHome() or (not attack_running and not isfleeing) or player_defeated or (main_army >= 0 and DistanceBetweenPoints(army_loc[main_army], captain_home) <= 750) then
      call TraceAll("===Retreat control ended===")
      set retreat_controlled = false
      set canflee = false
      set isfleeing = false     // home so no need to be retreating. Also prevents bug in the captainretreating condition
      call SetGroupsFlee(false)
      return
    else
      call SetGroupsFlee(true)
    endif
endif

if isfleeing or (town_threatened and town_threat_break) then
    //call ClearCaptainTargets()
    if not CaptainIsHome() and not CaptainRetreating() then
      call TraceAll("Retreat Home Fix")
      call CaptainGoHome()
    endif  
endif

if isfleeing then
  call TQAddJob(2 * sleep_multiplier, RETREAT_CONTROL, 0)
  return
endif

if attack_running then

  set g = CreateGroup()
  if main_army == -1 or army_loc[main_army] == null or (GetLocationX(army_loc[main_army]) == 0 and GetLocationY(army_loc[main_army]) == 0 )then
    if major_hero == null or not UnitAlive(major_hero) then
      call Trace("No major hero in retreat control")
    else
      call GroupEnumUnitsInRange(g,GetUnitX(major_hero),GetUnitY(major_hero),battle_radius,null)
    endif
    set usearmy = false
  else
    call GroupEnumUnitsInRange(g, GetLocationX(army_loc[main_army]), GetLocationY(army_loc[main_army]), battle_radius, null)
    set usearmy = true
    set ally_sum = ally_sum + army_strength[main_army]
  endif
  set g = SelectUnittype(g, UNIT_TYPE_STRUCTURE, false)
  set g = SelectByHidden(g, false)
  set g = SelectByAlive(g, true)
  call MoveLocation(last_enemy_loc, GetLocationX(enemy_loc), GetLocationY(enemy_loc))
  call MoveLocation(last_ally_loc, GetLocationX(ally_loc), GetLocationY(ally_loc))

  loop
    set u = FirstOfGroup(g)
    exitwhen u == null  
    set unit_strength = GetUnitStrength(u)
    if (ModuloInteger(i, 200) == 0) then
      call Sleep(0.1)
    endif
    // set unit_life = GetUnitState(u, UNIT_STATE_LIFE)
    // set unit_mana = GetUnitState(u, UNIT_STATE_MANA)
    if GetOwningPlayer(u) != Player(PLAYER_NEUTRAL_AGGRESSIVE) then
      //call Trace("RETREAT_CONTROL: At least 1 unit detected")
      if IsPlayerAlly(GetOwningPlayer(u), ai_player) and (not usearmy or (usearmy and ai_player != GetOwningPlayer(u))) then
        //if GetUnitUserData(u) != UNIT_GOING_HOME then 
        if not IsUnitInGroup(u, unit_healing) then //and unit_life > RMax(flee_health_percentage * GetUnitState(u, UNIT_STATE_MAX_LIFE), flee_minimum_health) then
          set ally_sum = ally_sum + unit_strength
        endif
        set xa = xa + GetUnitX(u)  // Prevent loc exceeding map range
        set ya = ya + GetUnitY(u)
        //set ally_loc = GetSumLoc_dd(ally_loc, GetUnitLoc(u))
        set ally_count = ally_count + 1
      elseif IsPlayerEnemy(GetOwningPlayer(u), ai_player) and not IsUnitInvisibleAM(u, ai_player) then
        set enemy_sum = enemy_sum + unit_strength
        set xe = xe + GetUnitX(u)
        set ye = ye + GetUnitY(u)
        //set enemy_loc = GetSumLoc_dd(enemy_loc, GetUnitLoc(u))
        set enemy_count = enemy_count + 1
      endif
    elseif GetOwningPlayer(u) == Player(PLAYER_NEUTRAL_AGGRESSIVE) and not IsUnitInvisibleAM(u, ai_player) and not UnitIsSleeping(u) and IsUnitVisible(u, ai_player) then
      // set unit_life = GetUnitState(u, UNIT_STATE_LIFE)
      // set unit_mana = GetUnitState(u, UNIT_STATE_MANA)
      set creep_sum = creep_sum + unit_strength
    endif
    call GroupRemoveUnit(g,u)
    set i = i + 1
  endloop
  call DestroyGroup(g)
  set g = null
  
  // Ancient tree army bonuses
  if ancient_expanding and ancient_attack_running then 
    set ally_sum = ally_sum + 7
  endif
  
  if br_rush_attacked then
    set ally_sum = ally_sum + 5
  endif  

  set xe = xe / I2R(Max(enemy_count, 1))
  set ye = ye / I2R(Max(enemy_count, 1))
  set xa = xa / I2R(Max(ally_count, 1))
  set ya = ya / I2R(Max(ally_count, 1))
  call MoveLocation(enemy_loc, xe, ye)
  call MoveLocation(ally_loc, xa, ya)
  //set enemy_loc = GetDivisionLoc_d(enemy_loc, I2R(Max(enemy_count, 1)))
  //set ally_loc = GetDivisionLoc_d(ally_loc, I2R(Max(ally_count, 1)))
  //  call SetCaptainHome(0, GetLocationX(ally_loc), GetLocationY(ally_loc))

  set enemy_strength_sum = enemy_sum + creep_sum
  set ally_strength_sum = ally_sum
  call Trace("RETREAT_CONTROL: Our strength: " + Real2Str(ally_strength_sum) + " Enemy strength: " + Real2Str(enemy_strength_sum))

  if CaptainInCombat(true) and not desperation_assault and (enemy_strength_sum > ApplyFleeStrengthModifier(ally_strength_sum, true) or (town_threatened and town_threat_break and attack_running) or ally_strength_sum == 0) then
    call TraceAll("RETREAT_CONTROL: Flee!!!!")
    set break_attack = attack_running
    call CaptainGoHome()
    set isfleeing = true
  elseif CaptainInCombat(true) and not desperation_assault and (enemy_strength_sum > ApplyFleeStrengthModifier(ally_strength_sum, false) or (battle_radius == creep_battle_radius and enemy_strength_sum > ally_strength_sum )) then
    call TraceAll("RETREAT_CONTROL: Allowed to Flee")
    call SetGroupsFlee(true)
    set canflee = true
  else
    call SetGroupsFlee(false) // Prevent natural fleeing
    set isfleeing = false
    set canflee = false
  endif
  
endif  

  call TQAddJob(2 * sleep_multiplier, RETREAT_CONTROL, 0)
endfunction
#ENDIF
