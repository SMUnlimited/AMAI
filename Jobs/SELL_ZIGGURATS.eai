#IFDEF GLOBAL
  location TRrecovery = null
  unit sellbuild = null
  unit sellpeon = null
#ELSE

function RecoveryTRBuild takes group g returns nothing
  if sellbuild == null or not UnitAlive(sellbuild) then
    call GroupEnumUnitsInRange(g, GetLocationX(TRrecovery), GetLocationY(TRrecovery), 2000, null)
    set g = SelectByPlayer(g, ai_player, true)
    set g = SelectUnittype(g, UNIT_TYPE_STRUCTURE, true)
    set g = SelectByAlive(g, true)
    set g = SelectByHidden(g, false)
    set sellbuild = FirstOfGroup(g)
  endif
  if sellbuild == null then
    call RemoveLocation(TRrecovery)
    set TRrecovery = null
    set sellbuild = null
    set sellpeon = null
  else
    if sellpeon == null or not UnitAlive(sellpeon) then
      set sellpeon = GetExpansionPeon2(sellpeon)
    endif
    if sellpeon != null then
      call IssueTargetOrder(sellpeon, "unsummon", sellbuild)
    endif
  endif
endfunction

function SelectByZiggurat takes group rg returns group
  local unit u = null
  local integer i = 0
  local integer id = 0
  local group g = rg
  set rg = CreateGroup()
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if UnitAlive(u) and not IsUnitHidden(u) then
      set id = GetUnitTypeId(u)
      loop
        exitwhen i >= ziggarray
        if id == racial_zigg[i] then
          call GroupAddUnit(rg, u)
        endif
        set i = i + 1
      endloop
      set i = 0
    endif
    call GroupRemoveUnit(g, u)
  endloop
  call DestroyGroup(g)
  set g = null
  return rg
endfunction

function CheckSellZiggurat takes unit u, group cg, integer c returns integer
  local group g = CreateGroup()
  local unit z = null
  local integer i = 0
  call GroupEnumUnitsInRange(g, GetUnitX(u), GetUnitY(u), race_ziggurat_keep_distance, null)
  call GroupRemoveUnit(g, u)
  loop
    set z = FirstOfGroup(g)
    exitwhen z == null or i > 0
    if GetOwningPlayer(z) == ai_player and IsUnitType(z, UNIT_TYPE_STRUCTURE) and UnitAlive(z) and not IsUnitHidden(z) and not IsUnitInGroup(z, cg) then
      if IsUnitType(z, UNIT_TYPE_TOWNHALL) then
        if c < 2 then
          set i = i + 1
          set c = c - 1
        endif
      else
        set i = i + 1
      endif
    endif
    call GroupRemoveUnit(g, z)
  endloop
  if i < 1 then
    call Unsummon(u)
  endif
  call DestroyGroup(g)
  set g = null
  set z = null
  return c
endfunction

function CheckSellStructure takes group g returns nothing
  set g = SelectUnittype(g, UNIT_TYPE_STRUCTURE, true)
  set g = SelectUnittype(g, UNIT_TYPE_TOWNHALL, false)
  set g = SelectByIdOr(g, old_id[racial_lumber], old_id[racial_expansion], false)
  set g = SelectByIdOr(g, old_id[racial_altar], old_id[racial_shop], false)
  set g = SelectByAlive(g, true)
  set g = SelectByHidden(g, false)
  call Unsummon(FirstOfGroup(g))
endfunction

function SellZigguratJob takes nothing returns nothing
  local group g = CreateGroup()
  local group cg = null
  local unit u = null
  local integer c = GetUnitCount(old_id[racial_hall[tier]])
  call DisplayToAllJobDebug("SELL_ZIGGURATS JOB START")
  if not towerrush then
    if TRrecovery == null then
      if GetGoldOwned() + GetGold() < 800 then  // if insufficient resources, buy more buildings , else ensure there is sufficient food available
        call GroupEnumUnitsOfPlayer(g, ai_player, null)
        call CheckSellStructure(g)
      elseif TownCountDone(racial_farm) * GetFoodMade(old_id[racial_farm]) > Min(FoodUsed() + 10, ver_food_limit) then
        call GroupEnumUnitsOfPlayer(g, ai_player, null)
        set g = SelectByZiggurat(g)
        set cg = CopyGroup(g, cg)
        loop
          set u = FirstOfGroup(g)
          exitwhen u == null
          set c = CheckSellZiggurat(u, cg, c)
          call GroupRemoveUnit(g, u)
        endloop
        call DestroyGroup(cg)
        set cg = null
      endif
    else
      call RecoveryTRBuild(g)
      call DestroyGroup(g)
      set g = null
      call TQAddJob(6, SELL_ZIGGURATS, 0)
      return
    endif
  endif
  call DestroyGroup(g)
  set g = null
  if not pathing_done then
    call TQAddJob(30, SELL_ZIGGURATS, 0)
  endif
endfunction
#ENDIF