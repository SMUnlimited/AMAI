#IFDEF GLOBAL
#ELSE

function SendHomeMoveUnitToLoc takes unit u, location l returns nothing
  local integer enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
  if (GetUnitAbilityLevel(u, 'AOwk') > 0 or GetUnitAbilityLevel(u, 'ANwk') > 0) then
    if enemystrength > 0 and not UnitInvis(u) then
      call IssueImmediateOrder(u, "windwalk")
    endif
  endif
  if enemystrength > 0 and ((GetUnitState(u, UNIT_STATE_MANA) > 50 and GetUnitAbilityLevel(u, 'AEbl') == 1) or (GetUnitState(u, UNIT_STATE_MANA) > 10 and GetUnitAbilityLevel(u, 'AEbl') > 1)) then
    call IssuePointOrder(u, "blink", GetLocationX(l), GetLocationY(l))
    call IssuePointOrder(u, "move", GetLocationX(l), GetLocationY(l))
  elseif GetUnitAbilityLevel(u, 'Ashm') > 0 and enemystrength > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) and not IsUnitType(u, UNIT_TYPE_HERO) then
    call CreateDebugTag("SEND_HOME: Night Hide", 10, u, 3.00, 1.50)
    call IssueImmediateOrder(u, "ambush")
  else
    call CreateDebugTag("SEND_HOME: Moving to Location", 10, u, 3.00, 2.00)
    //call RemoveGuardPosition(u)
    call IssuePointOrder(u, "move", GetLocationX(l), GetLocationY(l))
  endif
endfunction

function SomeUnitHasHealingItem takes unit ru, unit u, integer rhi returns unit
  local group g = CreateGroup()
  call GroupEnumUnitsInRange(g, GetUnitX(u), GetUnitY(u), 400, null)
  set g = SelectByPlayer(g, ai_player, true)
  set g = SelectByAlive(g, true)
  loop
    set ru = FirstOfGroup(g)
    exitwhen ru == null
    if GetItemNumberOnUnit(rhi, ru) > 0 then
      call DestroyGroup(g)
      set g = null
      return ru
    endif
    call GroupRemoveUnit(g, ru)
  endloop
  call DestroyGroup(g)
  set g = null
  return null
endfunction

function SendUnitHomeJob takes unit u, integer p returns nothing

  local location l = null
  local unit nearshopunit = null
  local group g = null
  local unit corpse = null
  local item it = null
  local integer racial_healing_item = GetHeroHealingItem()
  local integer racial_mana_item = GetHeroManaItem()
  local integer enemystrength = 0
  local unit otherhero = null

  call DisplayToAllJobDebug("SEND_HOME Job")

  if IsUnitType(u, UNIT_TYPE_HERO) then
    if racial_healing_item != 0 then
      set otherhero = SomeUnitHasHealingItem(otherhero, u, racial_healing_item)
    endif
    //set shop_wanted = 1
    if buy_type[racial_healing_item] == BT_RACIAL_ITEM then
      //set shop_unit = GetUnitOfTypeNearUnit(old_id[racial_shop], u, shop_unit)
      set nearshopunit = GetUnitOfTypeNearUnit(old_id[racial_shop], u, nearshopunit)
      //	set shop_distance_limit = raceshop_distance_limit
    else
      //	set shop_unit = nearest_neutral[NEUTRAL_MERCHANT]
      if not (neutral_guarded[NEUTRAL_MERCHANT] and ((GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 5 and GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 18) or not neutral_night_buy[NEUTRAL_MERCHANT])) then
        set nearshopunit = nearest_neutral[NEUTRAL_MERCHANT]
      endif
      //	set shop_distance_limit = merchant_distance_limit
    endif
    //set shop_sent = u
    //call TQAddJob(0, BUY_ITEM, racial_healing_item)
    //set nearshopunit = shop_unit
  endif

  call DisplayToAllJobDebug("SEND_HOME Starting check")

  // set enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
  if GetUnitState(u, UNIT_STATE_LIFE) <= 0 then
    call CreateDebugTag("SEND_HOME unit dead", 10, u, 3.00, 1.50)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)
  elseif GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) * (I2R(60)/100) and GetUnitCurrentOrder(u) != OrderId("cannibalize") then
    call CreateDebugTag("SEND_HOME Healed", 10, u, 3.00, 1.50)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, 0, u)
  elseif racial_healing_item != 0 and GetItemNumberOnUnit(racial_healing_item, u) > 0 then
    call CreateDebugTag("Hero: Use healing item", 10, u, 3.00, 2.00)
    if GetItemInstantType(racial_healing_item) == ITEMTYPE_CONTINUOUS and DistanceBetweenPoints_dk(GetUnitLoc(u), exist_town[p]) >= 1200 then
      call SendHomeMoveUnitToLoc(u,exist_town[p])  // This should be required for all regenerative type healing items
      call TQAddUnitJob(4, SEND_HOME, p, u)
    else
      call CreateDebugTag("Hero: Use healing item", 10, u, 3.00, 1.50)
      set it = GetItemOfTypeOnUnit(racial_healing_item, u)
      call UnitUseItem(u, it)
      call UnitUseItemTarget(u, it, u)
      if racial_mana_item != 0 and GetUnitState(u, UNIT_STATE_MANA) < 100 and GetItemNumberOnUnit(racial_mana_item, u) > 0 then
        call UnitUseItem(u, GetItemOfTypeOnUnit(racial_mana_item, u))
      endif
      call TQAddUnitJob(Max(3,GetItemHealingTime(racial_healing_item)), SEND_HOME, p, u) // Have to add delay as continous healing items run out
      set it = null
    endif
  elseif otherhero != null and IsUnitType(u, UNIT_TYPE_HERO) then
    if GetSlotsFreeOnUnit(u) > 0 then  // prevent create on the ground
      call UnitAddItem(u, GetItemOfTypeOnUnit(racial_healing_item, otherhero))
      call TQAddUnitJob(2, RESET_GUARD_POSITION, 0, u)
    else
      call TQAddUnitJob(4, SEND_HOME, p, u)
    endif
  elseif nearshopunit != null and IsUnitType(u, UNIT_TYPE_HERO) and GetSlotsFreeOnUnit(u) > 0 and GetItemNumberOnUnit(racial_healing_item, u) <= 0 then
    if DistanceBetweenUnits(u, nearshopunit) >= buy_distance then
      set l = GetUnitLoc(nearshopunit)
      call SendHomeMoveUnitToLoc(u,l)
      call RemoveLocation(l)
      set l = null
      call TQAddUnitJob(4, SEND_HOME, p, u)
    else
      call CreateDebugTag("SEND_HOME Stop at Shop", 10, u, 3.00, 2.00)
      call IssueImmediateOrder(u, "stop")
      call IssueNeutralImmediateOrderById(ai_player, nearshopunit, old_id[racial_healing_item])
      if GetUnitState(u, UNIT_STATE_MANA) < 100 and GetItemNumberOnUnit(racial_mana_item, u) <= 0 then
        call IssueNeutralImmediateOrderById(ai_player, nearshopunit, old_id[racial_mana_item])
      endif
      call TQAddUnitJob(2, RESET_GUARD_POSITION, 0, u)  // end job
    endif
  else
    if DistanceBetweenPoints_dk(GetUnitLoc(u), exist_town[p]) >= 1200 then
      call RemoveGuardPosition(u)  // prevent town_threatened give control , but not restore , causing hesitation
      call SendHomeMoveUnitToLoc(u,exist_town[p])
    else
      if town_threatened and GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 1500) > 0 then  // only need to control the unit if it is attacked nearby, otherwise will be killed
        call CreateDebugTag("SEND_HOME town_threatened", 10, u, 3.00, 1.50)
        call RecycleGuardPosition(u)   // Gives unit control for only a little bit but dosn't remove from healing group
      elseif GetUnitAbilityLevel(u, 'Ashm') > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) and not IsUnitType(u, UNIT_TYPE_HERO) then
        call IssueImmediateOrder(u, "ambush")
        call CreateDebugTag("SEND_HOME hide", 10, u, 3.00, 1.50)
      elseif GetUnitCurrentOrder(u) != OrderId("cannibalize") and (GetUnitAbilityLevel(u, 'Acn2') > 0 or GetUnitAbilityLevel(u, 'Acan') > 0 or GetUnitAbilityLevel(u, 'ACcn') > 0) then
        set g = CreateGroup()
        call GroupEnumUnitsInRangeOfLoc(g, exist_town[p], 1000, null)
        set g = SelectByAlive(g, false)
        set g = SelectUnittype(g,UNIT_TYPE_DEAD,true)
        set g = SelectUnittype(g,UNIT_TYPE_STRUCTURE,false)
        set corpse = FirstOfGroup(g)
        if corpse != null then
          call IssueTargetOrder(u, "move" , corpse)
          call IssueImmediateOrder(u, "cannibalize")
          call CreateDebugTag("SEND_HOME cannibalize", 10, u, 3.00, 1.50)
          set corpse = null
        elseif GetUnitAbilityLevel(u, 'Ahrl') > 0 then   // 'Ahrl' Ghoul Harvest lumber ability
          if GetUnitCurrentOrder(u) == OrderId("harvest") or GetUnitCurrentOrder(u) == OrderId("resumeharvesting") then
          else
            call IssueImmediateOrder(u, "autoharvestlumber")
          endif
          call CreateDebugTag("SEND_HOME harvest lumber", 10, u, 3.00, 1.50)
        endif
        call DestroyGroup(g)
        set g = null
      endif
    endif
    call TQAddUnitJob(4, SEND_HOME, p, u)
    //call DisplayToAllJobDebug("SEND_HOME: JOB Finished!!!! ")
  endif
  set nearshopunit = null
  set otherhero = null
endfunction
#ENDIF