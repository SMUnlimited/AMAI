#IFDEF GLOBAL
#ELSE

function SendHomeMoveUnitToLoc takes unit u, integer p, location l returns nothing
local integer enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
		if enemystrength > 0 and not UnitInvis(u) then
			call IssueImmediateOrder(u, "windwalk")
		endif
		if enemystrength > 0 and ((GetUnitState(u, UNIT_STATE_MANA) > 50 and GetUnitAbilityLevel(u, 'AEbl') == 1) or (GetUnitState(u, UNIT_STATE_MANA) > 10 and GetUnitAbilityLevel(u, 'AEbl') > 1)) then
			call IssuePointOrder(u, "blink", GetLocationX(l), GetLocationY(l))
		elseif GetUnitAbilityLevel(u, 'Ashm') > 0 and enemystrength > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) then
			call CreateDebugTag("SEND_HOME: Night Hide", 10, u, 3.00, 1.50)
			call IssueImmediateOrder(u, "ambush")
		else
			call CreateDebugTag("SEND_HOME: Moving to Location", 10, u, 3.00, 2.00)		
			call RemoveGuardPosition(u)			
			call IssuePointOrder(u, "move", GetLocationX(l), GetLocationY(l))
		endif
		call TQAddUnitJob(4, SEND_HOME, p, u)
endfunction
		
function SomeUnitHasHealingItem takes unit u, integer rhi returns unit
	local group g = CreateGroup()
	local unit aunit = null
	
	call GroupEnumUnitsInRange(g, GetUnitX(u), GetUnitY(u), 400, null)
	set g = SelectByPlayer(g,ai_player, true)
	set g = SelectByAlive(g,true)
	loop
		set aunit = FirstOfGroup(g)
		exitwhen aunit == null
		if rhi != 0 and GetItemNumberOnUnit(rhi, aunit) > 0 then
			call DestroyGroup(g)
			set g = null
			return aunit
		endif
		call GroupRemoveUnit(g, aunit)
	endloop
	call DestroyGroup(g)
	set g = null
	return null
endfunction		
		
function SendUnitHomeJob takes unit u, integer p returns nothing

local location l = null
local unit nearshopunit = null 
local group g = null
local unit corpse = null
local integer racial_healing_item = GetHeroHealingItem()
local integer racial_mana_item = GetHeroManaItem()
local integer enemystrength = 0
local unit otherhero =null 
local item it = null

  call DisplayToAllJobDebug("SEND_HOME Job")
  if racial_healing_item != null and IsUnitType(u, UNIT_TYPE_HERO) then
	set otherhero = SomeUnitHasHealingItem(u, racial_healing_item)
  endif
	
  if IsUnitType(u, UNIT_TYPE_HERO) then
  	//set shop_wanted = 1
  	if buy_type[racial_healing_item] == BT_RACIAL_ITEM then
    	//	set shop_unit = GetUnitOfTypeNearUnit(old_id[racial_shop], u)
    		set nearshopunit = GetUnitOfTypeNearUnit(old_id[racial_shop], u)
    	//	set shop_distance_limit = raceshop_distance_limit
  	else
    	//	set shop_unit = nearest_neutral[NEUTRAL_MERCHANT]
		    if not (neutral_guarded[NEUTRAL_MERCHANT] and ((GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 5 and GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 18) or not neutral_night_buy[NEUTRAL_MERCHANT])) then
				set nearshopunit = nearest_neutral[NEUTRAL_MERCHANT]
			endif
    	//	set shop_distance_limit = merchant_distance_limit
  	endif
  	//set shop_sent = u
      //call TQAddJob(0, BUY_ITEM, racial_healing_item)
      //set nearshopunit = shop_unit
  endif

  call DisplayToAllJobDebug("SEND_HOME Starting check")

   
  // set enemystrength = GetLocationNonCreepStrength(GetUnitX(u), GetUnitY(u), 800)
  if GetUnitState(u, UNIT_STATE_LIFE) <= 0 then
	call CreateDebugTag("SEND_HOME unit dead", 10, u, 3.00, 1.50)
  	call GroupRemoveUnit(unit_healing, u)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, p, u)  
  elseif GetUnitState(u, UNIT_STATE_LIFE) >= GetUnitState(u, UNIT_STATE_MAX_LIFE) * (I2R(p)/100) and GetUnitCurrentOrder(u) != OrderId("cannibalize") then
	call CreateDebugTag("SEND_HOME Healed", 10, u, 3.00, 1.50)	
	call GroupRemoveUnit(unit_healing, u)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, 0, u)
  elseif racial_healing_item != 0 and GetItemNumberOnUnit(racial_healing_item, u) > 0 then
        set l = GetUnitLoc(u)
		if GetItemInstantType(racial_healing_item) == ITEMTYPE_CONTINUOUS and DistanceBetweenPoints(l, home_location) >= 1200 then
			call SendHomeMoveUnitToLoc(u,p,home_location)  // This should be required for all regenerative type healing items	
		else
		    set it = GetItemOfTypeOnUnit(racial_healing_item, u)
			call UnitUseItem(u, it )
			call UnitUseItemTarget(u, it, u)
			if racial_mana_item != 0 and GetUnitState(u, UNIT_STATE_MANA) < 100 and GetItemNumberOnUnit(racial_mana_item, u) > 0 then
				call UnitUseItem(u, GetItemOfTypeOnUnit(racial_mana_item, u))
			endif
			call CreateDebugTag("Hero: Use healing item", 10, u, 3.00, 2.00)	
			call TQAddUnitJob(Max(3,GetItemHealingTime(racial_healing_item)), SEND_HOME, p, u) // Have to add delay as continous healing items run out then
		endif
		call RemoveLocation(l)
		set l = null
  elseif otherhero != null then
		call UnitAddItem(u, GetItemOfTypeOnUnit(racial_healing_item, otherhero))
  elseif nearshopunit != null and GetSlotsFreeOnUnit(u) > 0 and GetItemNumberOnUnit(racial_healing_item, u) <= 0 then
    set l = GetUnitLoc(nearshopunit)
	if DistanceBetweenUnits(u, nearshopunit) >= buy_distance then
		call SendHomeMoveUnitToLoc(u,p, l)
  	else
		call CreateDebugTag("SEND_HOME Stop at Shop", 10, u, 3.00, 2.00)	
      	call IssueImmediateOrder(u, "stop")
      	call IssueNeutralImmediateOrderById(ai_player, nearshopunit, old_id[racial_healing_item])
		if GetUnitState(u, UNIT_STATE_MANA) < 100 and GetItemNumberOnUnit(racial_mana_item, u) <= 0 then
			call IssueNeutralImmediateOrderById(ai_player, nearshopunit, old_id[racial_mana_item])
		endif
		call RecycleGuardPosition(u)		
		call TQAddUnitJob(4, SEND_HOME, p, u)	
  	endif
	call RemoveLocation(l)
  	set l = null
  else
      set l = GetUnitLoc(u)
      if DistanceBetweenPoints(l, home_location) >= 1200 then
		call SendHomeMoveUnitToLoc(u,p,home_location)
	  else
		set g = CreateGroup()
		call GroupEnumUnitsInRangeOfLoc(g, home_location, 1000, null)
		set g = SelectByAlive(g, false)		
		set g = SelectUnittype(g,UNIT_TYPE_STRUCTURE,false)
		set g = SelectUnittype(g,UNIT_TYPE_DEAD,true)
		
		set corpse = FirstOfGroup(g)
		if town_threatened then
			call RecycleGuardPosition(u)   // Gives unit control for only a little bit but dosn't remove from healing group
		elseif GetUnitAbilityLevel(u, 'Ashm') > 0 and (GetFloatGameState(GAME_STATE_TIME_OF_DAY) >= 18 or GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6) then
			call IssueImmediateOrder(u, "ambush")
			call CreateDebugTag("SEND_HOME hide", 10, u, 3.00, 1.50)	
		elseif GetUnitCurrentOrder(u) != OrderId("cannibalize") and (GetUnitAbilityLevel(u, 'Acn2') > 0 or GetUnitAbilityLevel(u, 'Acan') > 0 or GetUnitAbilityLevel(u, 'ACcn') > 0)  and corpse != null then
			call IssueTargetOrder(u, "move" , corpse)
			call IssueImmediateOrder(u, "cannibalize")
			call CreateDebugTag("SEND_HOME cannibalize", 10, u, 3.00, 1.50)	
		elseif GetUnitAbilityLevel(u, 'Ahrl') > 0 and GetUnitCurrentOrder(u) != OrderId("cannibalize") then   // 'Ahrl' Ghoul Harvest lumber ability
			call IssueImmediateOrder(u, "autoharvestlumber")
			call CreateDebugTag("SEND_HOME harvest lumber", 10, u, 3.00, 1.50)	
		endif
		call DestroyGroup(g)
		set g = null
		call TQAddUnitJob(4, SEND_HOME, p, u)
	  endif
      call RemoveLocation(l)
	  set l = null
	  //call DisplayToAllJobDebug("SEND_HOME: JOB Finished!!!! ")
  endif
endfunction
#ENDIF