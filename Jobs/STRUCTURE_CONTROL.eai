#IFDEF GLOBAL
    location rally_point = null
    boolean homebuild = true
    boolean minebuild = false
    boolean shredderbuild = false
#ELSE

function CheckBurrow takes nothing returns nothing
  local group g = CreateGroup()
  local unit u = null
  local integer id = old_id[racial_burrow]
  call GroupEnumUnitsOfPlayer(g, ai_player, null)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if GetOwningPlayer(u) == ai_player and GetUnitTypeId(u) == id and UnitAlive(u) and not IsUnitHidden(u) then
      call IssueImmediateOrder(u, "burrow")  //fix orc peon go battlestations , but can not standdown
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
endfunction

function CheckBuildLoc takes location l, real range returns integer
  local group g = CreateGroup()
  local unit u = null
  local integer i = 0
  call GroupEnumUnitsInRangeOfLoc(g, l, range, null)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if GetOwningPlayer(u) == ai_player and IsUnitType(u, UNIT_TYPE_STRUCTURE) and UnitAlive(u) and not IsUnitHidden(u) then
      set i = i + 1
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(g)
  set g = null
  return i
endfunction

function CheckShredderLoc takes nothing returns nothing
  local integer d = old_id[neutral_shredder]
  local location l = null
  local unit u = null
  local group g = CreateGroup()
  call GroupEnumUnitsInRangeOfLoc(g, home_location, 2000, null)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    exitwhen GetOwningPlayer(u) == ai_player and GetUnitTypeId(u) == d and UnitAlive(u) and not IsUnitHidden(u)
    call GroupRemoveUnit(g,u)
  endloop
  if u != null then
    set d = GetUnitCurrentOrder(u)
    if d == OrderId("harvest") or d == OrderId("resumeharvesting") then
      set l = GetUnitLoc(u)
      if DistanceBetweenPoints_kd(home_location, l) >= 1000 then  //Ensure to be near home_location
        call GroupClear(g)
        call GroupEnumUnitsInRangeOfLoc(g, l, 800, null)
        set d = 0
        loop
          set u = FirstOfGroup(g)
          exitwhen u == null
          if GetOwningPlayer(u) == ai_player and IsUnitType(u, UNIT_TYPE_STRUCTURE) and UnitAlive(u) and not IsUnitHidden(u) then
            set d = d + 1
          endif
          call GroupRemoveUnit(g,u)
        endloop
        set shredderbuild = d < 5
      endif
      set l = null
    endif
    set u = null
  endif
  call DestroyGroup(g)
  set g = null
endfunction

function CheckRallyPoint takes nothing returns nothing
  local group g = CreateGroup()
  local group hg = CreateGroup()
  local unit u = null
  local location l = home_location
  local integer i = 0
  if rally_point == null and front_locs_computed then
    set i = Max(GetRandomInt(1, front_loc_num - 1),0)
    if front_loc[i] != null then
      set rally_point = AIGetProjectedLoc(front_loc[i], home_location, -(front_base_distance*0.25), 0)
    elseif front_loc[0] != null and GetLocationX(front_loc[0]) != 0 and GetLocationY(front_loc[0]) != 0 then
      set rally_point = AIGetProjectedLoc(front_loc[0], home_location, -1200, 0)
    endif
  endif
  call GroupEnumUnitsOfPlayer(g, ai_player, null)
  call GroupEnumUnitsInRangeOfLoc(hg, home_location, expansion_taken_radius, null)
  if rally_point != null then
    set l = rally_point
  endif
  loop
    set u = FirstOfGroup(hg)
    exitwhen u == null
    if GetOwningPlayer(u) == ai_player and GetUnitAbilityLevel(u, 'ARal') > 0 and UnitAlive(u) and not IsUnitHidden(u) then
      call IssuePointOrderLoc(u, "setrally", l)  //avoid being blocked by front_loc build
    endif
    call GroupRemoveUnit(g,u)
    call GroupRemoveUnit(hg,u)
  endloop
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if GetUnitAbilityLevel(u, 'ARal') > 0 and UnitAlive(u) and not IsUnitHidden(u) then
      call IssuePointOrderLoc(u, "setrally", home_location)
    endif
    call GroupRemoveUnit(g,u)
  endloop
  call DestroyGroup(hg)
  set hg = null
  call DestroyGroup(g)
  set g = null
  set l = null
endfunction

function StructureControlJob takes nothing returns nothing
  if not town_threatened and not TownThreatened() then
    call DisplayToAllJobDebug("STRUCTURE_CONTROL JOB START")
    call CheckRallyPoint()
    if racial_lumber == 0 or race_no_wood_harvest then  //help fix ELF build blocking , ture is build may be dismantled after being attacked
      set homebuild = CheckBuildLoc(home_location,800) < 5
      set minebuild = mine_loc != null and CheckBuildLoc(mine_loc,700) < 4
      set shredderbuild = false  // reset
      if TownCountDone(neutral_shredder) > 0 then
        call CheckShredderLoc()  //  harvest wood will have new loc can build
      endif
    endif
    if racial_burrow != 0 and TownCountDone(racial_burrow) > 0 then
      call CheckBurrow()
    endif
  endif
  if not pathing_done then
    call TQAddJob(180, STRUCTURE_CONTROL, 0)
  endif
endfunction
#ENDIF