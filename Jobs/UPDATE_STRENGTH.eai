#IFDEF GLOBAL
    integer area_uncertainty		= 10
#ELSE
//==========================================================================
// Update Strength
//==========================================================================
function UpdateStrength takes nothing returns nothing
local integer i = 0
local integer enemy_num = 0
local integer ally_num = 0
#INCLUDETABLE <$VER$\Strengths.txt>
local real %1 = 0
local real a%1 = 0
#ENDINCLUDE

loop
  exitwhen i >= PLAYERAGGRESSIVE
  if IsPlayerEnemy(ai_player, Player(i)) and GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING then
    set enemy_num = enemy_num + 1
#INCLUDETABLE <$VER$\Strengths.txt>
    set %1 = %1 + ((GetPlayer%1Strength(Player(i))) * GetPlayerStrengthHandicap(Player(i)))
#ENDINCLUDE
  elseif IsPlayerAlly(ai_player, Player(i)) and GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING then
	set ally_num = ally_num + 1
#INCLUDETABLE <$VER$\Strengths.txt>
    set a%1 = a%1 + ((GetPlayer%1Strength(Player(i))) * GetPlayerStrengthHandicap(Player(i)))
#ENDINCLUDE
  endif
  set i = i + 1
endloop

#INCLUDETABLE <$VER$\Strengths.txt>
if %1 > 0 then
	set enemy_%1 = RMax(%1 + GetRandomDiff(area_uncertainty), 0 )
else
	set enemy_%1 = 0
endif
set ally_%1 = a%1
#ENDINCLUDE

endfunction

function UpdateStrengthJob takes nothing returns nothing
  call DisplayToAllJobDebug("UPDATE_STRENGTH Start")
  if player_defeated then
    return
  endif
  call UpdateStrength()
  call TQAddJob(15 * sleep_multiplier, UPDATE_STRENGTH, 0)
endfunction
#ENDIF