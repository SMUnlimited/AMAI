#IFDEF GLOBAL
#ELSE
function ElfMineCheck takes unit mine returns boolean
  local group g = CreateGroup()
  local group tempg = null
  local location unitloc = GetUnitLoc(mine)
  local unit u = null
  local unit v = null
  local integer i = 0
  local integer delaywisps = 0
  
    call DisplayToAllJobDebug("WISP_CHECK Job Start")
  
  if TownCountDone(race_manual_loading_wisp) > 6 then
	set delaywisps = ver_optimal_gold
  else
    set delaywisps = ver_optimal_gold - 1
  endif
  
  call GroupEnumUnitsOfPlayer(g, ai_player, null)
  set g = SelectUnittype(g, UNIT_TYPE_PEON, true)
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if IsUnitInTransport(u, mine) then
      set i = i + 1
	  //call RecycleGuardPosition(u)
    endif
    call GroupRemoveUnit(g, u)
  endloop
  if i < delaywisps then
    call GroupEnumUnitsOfPlayer(g, ai_player, null)
    set g = SelectByLoaded(g, false)
    set g = SelectNumberOfId(g, 100, old_id[race_manual_loading_wisp])
	set tempg = CopyGroup(g)
	call DestroyGroup(g)
    set g = GetNearestSubGroupOfGroup(tempg, unitloc, delaywisps - i)
	//call GroupRemoveGuardPositionInstant(g) // this gets wisps to come off the trees.
    call GroupTargetOrder(g, "harvest", mine)
	call DestroyGroup(tempg)
	set tempg = null
  endif
  call RemoveLocation(unitloc)
  set unitloc = null
  call DestroyGroup(g)
  set g = null
  return i < delaywisps
endfunction

function WispCheckJob takes nothing returns nothing
  local group g = CreateGroup()
  local unit u = null
  local boolean mines_not_full = true
//  call DisplayToAll("Wisp Start")
  call GroupEnumUnitsOfPlayer(g, ai_player, null)
  set g = SelectNumberOfId(g, 100, old_id[race_manual_loading_mine])
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null
    if UnitAlive(u) then
      set mines_not_full = ElfMineCheck(u) and mines_not_full
    endif
    call GroupRemoveUnit(g, u)
  endloop
  call DestroyGroup(g)
  set g = null
  if mines_not_full then
    call TQAddJob(90, WISP_CHECK, 0)
  else
    call TQAddJob(20, WISP_CHECK, 0)
  endif
endfunction
#ENDIF