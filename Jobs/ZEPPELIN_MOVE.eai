#IFDEF GLOBAL
    constant integer ZTARGET_HOME = 0
    constant integer ZTARGET_FOUNTAIN = 1
    constant integer ZTARGET_MOONWELLS = 2
    //boolean zepdropping = false	// Currently ordering unit to exit zepplin
#ELSE
function GetZTargetLocation takes integer target returns location
  if target == ZTARGET_HOME then
    return Location(GetLocationX(home_location), GetLocationY(home_location)) // Need to make new location otherwise home_location would be cleared
  elseif target == ZTARGET_MOONWELLS then
    return Location(GetLocationX(home_location), GetLocationY(home_location))
  else
    if nearest_neutral[NEUTRAL_POWER_FOUNTAIN] != null and UnitAlive(nearest_neutral[NEUTRAL_POWER_FOUNTAIN]) then
      return GetUnitLoc(nearest_neutral[NEUTRAL_POWER_FOUNTAIN])
    elseif nearest_neutral[NEUTRAL_HEAL_WARD] != null and UnitAlive(nearest_neutral[NEUTRAL_HEAL_WARD]) then
      return GetUnitLoc(nearest_neutral[NEUTRAL_HEAL_WARD])
    elseif UnitAlive(nearest_neutral[NEUTRAL_HEALING_FOUNTAIN]) then
      return GetUnitLoc(nearest_neutral[NEUTRAL_HEALING_FOUNTAIN])
    endif
    return Location(GetLocationX(home_location), GetLocationY(home_location))
  endif
endfunction

function AddZepFinishingJob takes integer target, integer wait, unit hu returns nothing
  if target == ZTARGET_FOUNTAIN then
    call TQAddUnitJob(wait, HEALTH_FOUNTAIN, 80, hu)
  elseif target == ZTARGET_MOONWELLS then
    call TQAddUnitJob(wait, MOON_WELL_CONTROL, 80, hu)
  else
    call TQAddUnitJob(wait, SEND_HOME, GetRandomInt(0,Max(exist_town_num-1,0)), hu)  // 0 is home_location
  endif
endfunction

function ZeppelinMoveJob takes integer target, unit hu, group z returns nothing
  local location tl = null
  local unit zep = FirstOfGroup(z)
  local location zeploc = null
  local location unitloc = null
  local integer clearvars = 0  //=1.. Zepplin system can now finish so return
  if GetUnitState(hu, UNIT_STATE_LIFE) <= 0 then
    call GroupRemoveUnit(unit_rescueing, zep)
    call GroupRemoveUnit(unit_zepplin_move, zep)
    call RecycleGuardPosition(zep)
    call TQAddUnitJob(2, RESET_GUARD_POSITION, 80, hu)
    call DestroyGroup(z)
    set zep = null
    //set zepdropping = false
    return
  endif
  if zep == null or not UnitAlive(zep) then
    if zep != null then
      call GroupRemoveUnit(unit_rescueing, zep)
      call GroupRemoveUnit(unit_zepplin_move, zep)
      set zep = null
    endif
    call AddZepFinishingJob(target, 1,hu)
    call DestroyGroup(z)
    //set zepdropping = false
    return
  endif
  call DisplayToAllJobDebug("ZEPPELIN_MOVE Start")
  call RemoveGuardPosition(hu)
  set zeploc = GetUnitLoc(zep)
  set unitloc = GetUnitLoc(hu)
  set tl = GetZTargetLocation(target)
  if IsUnitInTransport(hu, zep) then
    if DistanceBetweenPoints(zeploc, tl) > 1000 then  // and not zepdropping and DistanceBetweenPoints(zeploc, ally_loc) < 1500 then
      call IssuePointOrderLoc(zep, "move", tl)
      call CreateDebugTag("Move to safe location", 10, zep, 3.00, 1.50)
    else
      //if not zepdropping then
      call IssueImmediateOrder(zep, "stop")
      //endif
      //set zepdropping = true
      //call IssueTargetOrder(zep, "unload", hu)
      call IssuePointOrder(zep, "unloadall", GetLocationX(tl) + GetRandomReal(-200,200), GetLocationY(tl) + GetRandomReal(-200,200))
      call CreateDebugTag("unload unit", 10, zep, 3.00, 1.50)
      //call AddZepFinishingJob(target, 1,hu)  // Prevent unload fail
    endif
  else
    if GetUnitState(hu,UNIT_STATE_LIFE) >= GetUnitState(hu,UNIT_STATE_MAX_LIFE) * 0.8 then
      call TQAddUnitJob(2, RESET_GUARD_POSITION, 80, hu)
      set clearvars = 1
    else
      if DistanceBetweenPoints(unitloc, tl) < 1500 then //or DistanceBetweenPoints(zeploc, ally_loc) > 1300 then
        call AddZepFinishingJob(target, 1,hu)
        set clearvars = 1
      else
        call CreateDebugTag("Pick up unit", 10, zep, 3.00, 1.50)
        call IssueTargetOrder(zep, "smart", hu)
        call IssueTargetOrder(hu, "smart", zep)
      endif
    endif
  endif
  call RemoveLocation(tl)
  set tl = null
  call RemoveLocation(zeploc)
  set zeploc = null
  call RemoveLocation(unitloc)
  set unitloc = null
  if clearvars == 1 then
    call GroupRemoveUnit(unit_rescueing, zep)
    call GroupRemoveUnit(unit_zepplin_move, zep)
    call RecycleGuardPosition(zep)
    set zep = null
    call DestroyGroup(z)
    //set zepdropping = false
    return
  endif
  set zep = null
  call TQAddGroupJob(2, ZEPPELIN_MOVE, target, hu, z)
endfunction
#ENDIF