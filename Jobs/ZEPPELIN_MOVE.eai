#IFDEF GLOBAL
    constant integer ZTARGET_HOME = 0
    constant integer ZTARGET_FOUNTAIN = 1
	constant integer ZTARGET_MOONWELLS = 2
	boolean zepdropping = false	// Currently ordering unit to exit zepplin
#ELSE
function GetZTargetLocation takes integer target returns location
  if target == ZTARGET_HOME then
    return Location(GetLocationX(home_location), GetLocationY(home_location)) // Need to make new location otherwise home_location would be cleared
  elseif target == ZTARGET_MOONWELLS then
	return Location(GetLocationX(home_location), GetLocationY(home_location))
  else
    return GetUnitLoc(nearest_neutral[NEUTRAL_HEALING_FOUNTAIN])
  endif
endfunction

function AddZepFinishingJob takes integer target, integer wait, unit hu returns nothing
      if target == ZTARGET_FOUNTAIN then
		call TQAddUnitJob(wait, HEALTH_FOUNTAIN, 80, hu)
	  elseif target == ZTARGET_MOONWELLS then
		call TQAddUnitJob(wait, MOON_WELL_CONTROL, 80, hu)		
      else
		call TQAddUnitJob(wait, SEND_HOME, 50, hu)
      endif		
endfunction

function ZeppelinMoveJob takes integer target, unit hu, group z returns nothing
  local location tl = null
  local unit zep = FirstOfGroup(z)
  local location zeploc = null
  local location heroloc = null
  local integer clearvars = 0  //=1.. Zepplin system can now finish so return

  if GetUnitState(hu, UNIT_STATE_LIFE) <= 0 then
	call GroupRemoveUnit(unit_rescueing, zep)
	call DestroyGroup(z)
	return
  endif
  
  call DisplayToAllJobDebug("ZEPPELIN_MOVE Start")
  if not UnitAlive(zep) then
	call AddZepFinishingJob(target, 1,hu)
    call DestroyGroup(z)
    return
  endif
  
  set zeploc = GetUnitLoc(zep)
  set heroloc = GetUnitLoc(hu)
  set tl = GetZTargetLocation(target)
  if IsUnitInTransport(hu, zep) then
    if DistanceBetweenPoints(zeploc, tl) > 1000 and not zepdropping then  // and DistanceBetweenPoints(zeploc, ally_loc) < 1500 then
      call IssuePointOrderLoc(zep, "move", tl)
	  call CreateDebugTag("Move to safe location", 10, zep, 3.00, 1.50)
    else
	  if not zepdropping then
		call IssueImmediateOrder(zep, "stop")
	  endif
	  set zepdropping = true
      //call IssueTargetOrder(zep, "unload", hu)
	  call IssuePointOrder(zep, "unloadall", GetUnitX(zep), GetUnitY(zep))
	  call CreateDebugTag("unload unit", 10, zep, 3.00, 1.50)
	  call AddZepFinishingJob(target, 1,hu)
    endif
  elseif not IsUnitInTransport(hu,zep) and (zepdropping or GetUnitState(hu,UNIT_STATE_LIFE)>= GetUnitState(hu,UNIT_STATE_MAX_LIFE)) then
	set zepdropping = false
	call GroupRemoveUnit(unit_rescueing, zep)
	set clearvars = 1
 	call DestroyGroup(z)
  elseif not zepdropping then
    if DistanceBetweenPoints(heroloc, tl) < 1500 then //or DistanceBetweenPoints(zeploc, ally_loc) > 1300 then
	  call AddZepFinishingJob(target, 1,hu)
      call GroupRemoveUnit(unit_rescueing, zep)
      call DestroyGroup(z)
	  set clearvars = 1
    else
	  call CreateDebugTag("Pick up unit", 10, zep, 3.00, 1.50)
      call IssueTargetOrder(zep, "smart", hu)	
      call IssueTargetOrder(hu, "smart", zep)
    endif
  endif
  
  if tl != null then
  call RemoveLocation(tl)
  set tl = null
  endif
  if zeploc != null then
  call RemoveLocation(zeploc)
  set zeploc = null
  endif
  if heroloc != null then
  call RemoveLocation(heroloc)
  set heroloc = null
  endif
  if clearvars == 1 then 
	return
  endif
  call TQAddGroupJob(2, ZEPPELIN_MOVE, target, hu, z)
endfunction
#ENDIF