//==================================================================================================
//  $Id: human.ai,v 1.15 2003/04/23 19:26:00 bfitch Exp $
//==================================================================================================
globals
    boolean basic_opening       = true

    boolean b_hero1_done        = false
    boolean b_hero2_done        = false
    boolean b_hero3_done        = false
    boolean b_hero4_done        = false
    boolean b_knights_ok        = false
    boolean b_tank_ok           = false


    integer c_altar_done        = 0
    integer c_arcane            = 0
    integer c_aviary_done       = 0
    integer c_breaker_done      = 0
    integer c_barracks_done     = 0
    integer c_castle_done       = 0
    integer c_food_made         = 0
    integer c_food_used         = 0
    integer c_footman_done      = 0
    integer c_gold              = 0
    integer c_gold_owned        = 0
    integer c_gryphon_done      = 0
    integer c_gyro_done         = 0
    integer c_hall              = 0
    integer c_hall_done         = 0
    integer c_hawk_done         = 0
    integer c_hero1_done        = 0
    integer c_hero2_done        = 0
    integer c_hero3_done        = 0
    integer c_house             = 0
    integer c_house_done        = 0
    integer c_keep_done         = 0
    integer c_knight_done       = 0
    integer c_mill_done         = 0
    integer c_mines             = 0
    integer c_mortar_done       = 0
    integer c_peasant           = 0
    integer c_peasant_done      = 0
    integer c_priest_done       = 0
    integer c_rifleman_done     = 0
    integer c_sanctum_done      = 0
    integer c_smith_done        = 0
    integer c_sorceress_done    = 0
    integer c_tank              = 0
    integer c_tank_done         = 0
    integer c_watch             = 0
    integer c_watch_done        = 0
    integer c_guard             = 0
    integer c_workshop_done     = 0
    integer c_cannon       = 0
    integer c_zep               = 0
    integer hero_id4            = 0
    integer array skills4
    boolean HarvestFix          = false
    unit town_mine          = null
    unit array laboratory
    unit array herounit
    location homeloc = GetStartLocationLoc(GetPlayerStartLocation(Player(GetAiPlayer())))
endglobals

//--------------------------------------------------------------------------------------------------
//  set_skills
//--------------------------------------------------------------------------------------------------
function set_skills takes nothing returns nothing

    set skill[ 1] = HOLY_BOLT
    set skill[ 2] = DIVINE_SHIELD
    set skill[ 3] = HOLY_BOLT
    set skill[ 4] = DEVOTION_AURA
    set skill[ 5] = HOLY_BOLT
    set skill[ 6] = RESURRECTION
    set skill[ 7] = DEVOTION_AURA
    set skill[ 8] = DIVINE_SHIELD
    set skill[ 9] = DEVOTION_AURA
    set skill[10] = DIVINE_SHIELD
    call SetSkillArray(1,PALADIN)

    set skill[ 1] = DIVINE_SHIELD
    set skill[ 2] = HOLY_BOLT
    set skill[ 3] = DIVINE_SHIELD
    set skill[ 4] = DEVOTION_AURA
    set skill[ 5] = DIVINE_SHIELD
    set skill[ 6] = RESURRECTION
    set skill[ 7] = HOLY_BOLT
    set skill[ 8] = DEVOTION_AURA
    set skill[ 9] = HOLY_BOLT
    set skill[10] = DEVOTION_AURA
    call SetSkillArray(2,PALADIN)

    set skill[ 1] = HOLY_BOLT
    set skill[ 2] = DEVOTION_AURA
    set skill[ 3] = HOLY_BOLT
    set skill[ 4] = DIVINE_SHIELD
    set skill[ 5] = DEVOTION_AURA
    set skill[ 6] = RESURRECTION
    set skill[ 7] = HOLY_BOLT
    set skill[ 8] = DIVINE_SHIELD
    set skill[ 9] = DEVOTION_AURA
    set skill[10] = DIVINE_SHIELD
    call SetSkillArray(3,PALADIN)

    set skill[ 1] = THUNDER_BOLT
    set skill[ 2] = THUNDER_CLAP
    set skill[ 3] = THUNDER_BOLT
    set skill[ 4] = BASH
    set skill[ 5] = THUNDER_BOLT
    set skill[ 6] = AVATAR
    set skill[ 7] = THUNDER_CLAP
    set skill[ 8] = BASH
    set skill[ 9] = THUNDER_CLAP
    set skill[10] = BASH
    call SetSkillArray(1,MTN_KING)

    set skill[ 1] = THUNDER_CLAP
    set skill[ 2] = THUNDER_BOLT
    set skill[ 3] = THUNDER_CLAP
    set skill[ 4] = BASH
    set skill[ 5] = THUNDER_CLAP
    set skill[ 6] = AVATAR
    set skill[ 7] = THUNDER_BOLT
    set skill[ 8] = BASH
    set skill[ 9] = THUNDER_BOLT
    set skill[10] = BASH
    call SetSkillArray(2,MTN_KING)

    set skill[ 1] = THUNDER_CLAP
    set skill[ 2] = BASH
    set skill[ 3] = THUNDER_BOLT
    set skill[ 4] = BASH
    set skill[ 5] = THUNDER_CLAP
    set skill[ 6] = AVATAR
    set skill[ 7] = THUNDER_BOLT
    set skill[ 8] = BASH
    set skill[ 9] = THUNDER_BOLT
    set skill[10] = THUNDER_CLAP
    call SetSkillArray(3,MTN_KING)

    set skill[ 1] = WATER_ELEMENTAL
    set skill[ 2] = BRILLIANCE_AURA
    set skill[ 3] = WATER_ELEMENTAL
    set skill[ 4] = BLIZZARD
    set skill[ 5] = WATER_ELEMENTAL
    set skill[ 6] = MASS_TELEPORT
    set skill[ 7] = BLIZZARD
    set skill[ 8] = BRILLIANCE_AURA
    set skill[ 9] = BLIZZARD
    set skill[10] = BRILLIANCE_AURA
    call SetSkillArray(1,ARCHMAGE)

    set skill[ 1] = WATER_ELEMENTAL
    set skill[ 2] = BRILLIANCE_AURA
    set skill[ 3] = WATER_ELEMENTAL
    set skill[ 4] = BLIZZARD
    set skill[ 5] = WATER_ELEMENTAL
    set skill[ 6] = MASS_TELEPORT
    set skill[ 7] = BRILLIANCE_AURA
    set skill[ 8] = BLIZZARD
    set skill[ 9] = BRILLIANCE_AURA
    set skill[10] = BLIZZARD
    call SetSkillArray(2,ARCHMAGE)

    set skill[ 1] = BLIZZARD
    set skill[ 2] = BRILLIANCE_AURA
    set skill[ 3] = BLIZZARD
    set skill[ 4] = WATER_ELEMENTAL
    set skill[ 5] = BLIZZARD
    set skill[ 6] = MASS_TELEPORT
    set skill[ 7] = WATER_ELEMENTAL
    set skill[ 8] = BRILLIANCE_AURA
    set skill[ 9] = WATER_ELEMENTAL
    set skill[10] = BRILLIANCE_AURA
    call SetSkillArray(3,ARCHMAGE)

    set skill[ 1] = FLAME_STRIKE
    set skill[ 2] = SIPHON_MANA
    set skill[ 3] = FLAME_STRIKE
    set skill[ 4] = SIPHON_MANA
    set skill[ 5] = FLAME_STRIKE
    set skill[ 6] = SUMMON_PHOENIX
    set skill[ 7] = SIPHON_MANA
    set skill[ 8] = BANISH
    set skill[ 9] = BANISH
    set skill[10] = BANISH
    call SetSkillArray(1,BLOOD_MAGE)

    set skill[ 1] = SIPHON_MANA
    set skill[ 2] = FLAME_STRIKE
    set skill[ 3] = SIPHON_MANA
    set skill[ 4] = FLAME_STRIKE
    set skill[ 5] = SIPHON_MANA
    set skill[ 6] = SUMMON_PHOENIX
    set skill[ 7] = FLAME_STRIKE
    set skill[ 8] = BANISH
    set skill[ 9] = BANISH
    set skill[10] = BANISH
    call SetSkillArray(2,BLOOD_MAGE)

    set skill[ 1] = FLAME_STRIKE
    set skill[ 2] = SIPHON_MANA
    set skill[ 3] = BANISH
    set skill[ 4] = SIPHON_MANA
    set skill[ 5] = FLAME_STRIKE
    set skill[ 6] = SUMMON_PHOENIX
    set skill[ 7] = FLAME_STRIKE
    set skill[ 8] = BANISH
    set skill[ 9] = SIPHON_MANA
    set skill[10] = BANISH
    call SetSkillArray(3,BLOOD_MAGE)

    if hero_id != ARCHMAGE and hero_id2 != ARCHMAGE and hero_id3 != ARCHMAGE then
        set hero_id4 = ARCHMAGE
    elseif hero_id != MTN_KING and hero_id2 != MTN_KING and hero_id3 != MTN_KING then
        set hero_id4 = MTN_KING
    elseif hero_id != PALADIN and hero_id2 != PALADIN and hero_id3 != PALADIN then
        set hero_id4 = PALADIN
    elseif hero_id != BLOOD_MAGE and hero_id2 != BLOOD_MAGE and hero_id3 != BLOOD_MAGE then
        set hero_id4 = BLOOD_MAGE
    endif

    if hero_id4 == PALADIN then
        set skills4[ 1] = HOLY_BOLT
        set skills4[ 2] = DIVINE_SHIELD
        set skills4[ 3] = HOLY_BOLT
        set skills4[ 4] = DEVOTION_AURA
        set skills4[ 5] = HOLY_BOLT
        set skills4[ 6] = RESURRECTION
        set skills4[ 7] = DIVINE_SHIELD
        set skills4[ 8] = DEVOTION_AURA
        set skills4[ 9] = DIVINE_SHIELD
        set skills4[10] = DEVOTION_AURA
    elseif hero_id4 == MTN_KING then
        set skills4[ 1] = THUNDER_BOLT
        set skills4[ 2] = THUNDER_CLAP
        set skills4[ 3] = THUNDER_BOLT
        set skills4[ 4] = BASH
        set skills4[ 5] = THUNDER_BOLT
        set skills4[ 6] = AVATAR
        set skills4[ 7] = THUNDER_CLAP
        set skills4[ 8] = BASH
        set skills4[ 9] = THUNDER_CLAP
        set skills4[10] = BASH
    elseif hero_id4 == ARCHMAGE then
        set skills4[ 1] = WATER_ELEMENTAL
        set skills4[ 2] = BRILLIANCE_AURA
        set skills4[ 3] = WATER_ELEMENTAL
        set skills4[ 4] = BLIZZARD
        set skills4[ 5] = WATER_ELEMENTAL
        set skills4[ 6] = MASS_TELEPORT
        set skills4[ 7] = BRILLIANCE_AURA
        set skills4[ 8] = BLIZZARD
        set skills4[ 9] = BRILLIANCE_AURA
        set skills4[10] = BLIZZARD
    elseif hero_id4 == BLOOD_MAGE then
        set skills4[ 1] = FLAME_STRIKE
        set skills4[ 2] = SIPHON_MANA
        set skills4[ 3] = FLAME_STRIKE
        set skills4[ 4] = BANISH
        set skills4[ 5] = FLAME_STRIKE
        set skills4[ 6] = SUMMON_PHOENIX
        set skills4[ 7] = SIPHON_MANA
        set skills4[ 8] = BANISH
        set skills4[ 9] = SIPHON_MANA
        set skills4[10] = BANISH
    endif
endfunction

// fix 1.31 hero cannot Learning Skills
function SetHeroUint takes unit u, integer id returns unit
    local group g = CreateGroup()
    call GroupEnumUnitsOfPlayer(g, ai_player, null)
    loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        if GetUnitTypeId(u) == id and UnitAlive(u) and not IsUnitHidden(u) then
            call DestroyGroup(g)
            set g = null
            return u
        endif
        call GroupRemoveUnit(g, u )
    endloop
    call DestroyGroup(g)
    set g = null
    return u
endfunction

function SkillArraysfix takes nothing returns integer
    local integer level = GetHeroLevelAI()
    if level > max_hero_level then
        set max_hero_level = level
    endif

    if herounit[1] == null then
        set herounit[1] = SetHeroUint(herounit[1], hero_id)
    endif
    if herounit[2] == null then
        set herounit[2] = SetHeroUint(herounit[2], hero_id2)
    endif
    if herounit[3] == null then
        set herounit[3] = SetHeroUint(herounit[3], hero_id3)
    endif
    if herounit[4] == null then
        set herounit[4] = SetHeroUint(herounit[4], hero_id4)
    endif
    if herounit[1] != null and UnitAlive(herounit[1]) then
        call SelectHeroSkill(herounit[1], skills1[level])
    endif
    if herounit[2] != null and UnitAlive(herounit[2]) then
        call SelectHeroSkill(herounit[2], skills2[level])
    endif
    if herounit[3] != null and UnitAlive(herounit[3]) then
        call SelectHeroSkill(herounit[3], skills3[level])
    endif
    if herounit[4] != null and UnitAlive(herounit[4]) then
        call SelectHeroSkill(herounit[4], skills4[level])
    endif
    if GetHeroId() == hero_id then
        return skills1[level]
    elseif GetHeroId() == hero_id2 then
        return skills2[level]
    elseif GetHeroId() == hero_id3 then
        return skills3[level]
    elseif GetHeroId() == hero_id4 then
        return skills4[level]
    endif
    return 0
endfunction

//--------------------------------------------------------------------------------------------------
//  setup_force
//--------------------------------------------------------------------------------------------------
function setup_force takes nothing returns nothing
    call AwaitMeleeHeroes()
    call InitMeleeGroup()

    call SetMeleeGroup( hero_id             )
    call SetMeleeGroup( hero_id2            )
    call SetMeleeGroup( hero_id3            )
    call SetMeleeGroup( FOOTMEN             )
    call SetMeleeGroup( KNIGHT              )
    call SetMeleeGroup( RIFLEMEN            )
    call SetMeleeGroup( PRIEST              )
    call SetMeleeGroup( SORCERESS           )
    call SetMeleeGroup( GRYPHON             )
    call SetMeleeGroup( COPTER              )
    call SetMeleeGroup( SPELL_BREAKER       )
    call SetMeleeGroup( HUMAN_DRAGON_HAWK   )

    if GetUnitCountDone(hero_id4) > 0 then
        call SetMeleeGroup( hero_id4        )
    endif


    //elf
    call SetMeleeGroup( ARCHER              )
    call SetMeleeGroup( HUNTRESS            )
    call SetMeleeGroup( DRUID_TALON         )
    call SetMeleeGroup( DRUID_CLAW          )
    call SetMeleeGroup( DRYAD               )
    call SetMeleeGroup( CHIMAERA            )
    call SetMeleeGroup( MOUNTAIN_GIANT      )
    call SetMeleeGroup( FAERIE_DRAGON       )

    if GetUnitCountDone(HIPPO) > 0 then
        call SetMeleeGroup( HIPPO           )
    endif

    if GetUnitCountDone(HIPPO_RIDER) > 0 then
        call SetMeleeGroup( HIPPO_RIDER     )
    endif
    call SetMeleeGroup( DRUID_TALON_M       )
    call SetMeleeGroup( DRUID_CLAW_M        )

    //orc
    call SetMeleeGroup( GRUNT               )
    call SetMeleeGroup( RAIDER              )
    call SetMeleeGroup( TAUREN              )
    call SetMeleeGroup( HEAD_HUNTER         )
    call SetMeleeGroup( BERSERKER           )
    call SetMeleeGroup( WYVERN              )
    call SetMeleeGroup( WITCH_DOCTOR        )
    call SetMeleeGroup( SHAMAN              )
    call SetMeleeGroup( KODO_BEAST          )
    call SetMeleeGroup( BATRIDER            )
    call SetMeleeGroup( SPIRIT_WALKER       )

    //ud
    call SetMeleeGroup( GHOUL               )
    call SetMeleeGroup( CRYPT_FIEND         )
    call SetMeleeGroup( ABOMINATION         )
    call SetMeleeGroup( NECRO               )
    call SetMeleeGroup( BANSHEE             )
    call SetMeleeGroup( GARGOYLE            )
    call SetMeleeGroup( FROST_WYRM          )
    call SetMeleeGroup( OBS_STATUE          )
    if GetUnitCountDone(BLK_SPHINX) > 0 then
        call SetMeleeGroup( BLK_SPHINX      )
    endif

    call SetInitialWave(10)
endfunction

//--------------------------------------------------------------------------------------------------
//  force_level
//--------------------------------------------------------------------------------------------------
function force_level takes nothing returns integer
    local integer level = 4 // basic hero
    set level = level + 2 * (c_footman_done + c_priest_done + c_sorceress_done + c_breaker_done)
    set level = level + 3 * (c_rifleman_done + c_gryphon_done + c_hawk_done)
    set level = level + 5 * (c_hero3_done + c_knight_done)
    set level = level + 6 *  c_hero2_done
    return level
endfunction

//--------------------------------------------------------------------------------------------------
//  attack_sequence
//--------------------------------------------------------------------------------------------------
function attack_sequence takes nothing returns nothing
    local boolean needs_exp
    local boolean has_siege
    local boolean air_units
    local integer level

    loop
        exitwhen c_hero1_done > 0 and c_footman_done >= 2
        call Sleep(2)
    endloop

    if MeleeDifficulty() == MELEE_NEWBIE then
        call Sleep(240)
    endif

    call StaggerSleep(0,2)
    loop
        loop
            exitwhen not CaptainRetreating()
            call Sleep(2)
        endloop

        call setup_force()

        set level = force_level()
        set max_creeps = level * 4 / 5
        set min_creeps = max_creeps - 10
        if min_creeps < 0 then
            set min_creeps = 0
        endif

        set needs_exp        = take_exp and (level >= 9 or c_gold_owned < 2000)
        set has_siege        = level >= 40 or c_mortar_done > 0 or c_tank_done > 0
        set air_units        = c_gyro_done > 0 or c_gryphon_done > 0 or c_hawk_done > 0
        set allow_air_creeps = (c_rifleman_done + c_hawk_done + 2*c_gyro_done + c_gryphon_done) >= 3
        if has_siege then
            call SetMeleeGroup( ROCKET_TANK         )
        endif

        call SingleMeleeAttack(needs_exp,has_siege,false,air_units)

        if MeleeDifficulty() == MELEE_NEWBIE then
            call Sleep(60)
        endif
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  init_vars
//--------------------------------------------------------------------------------------------------
function init_vars takes nothing returns nothing

    set c_altar_done        = GetUnitCountDone(HUMAN_ALTAR)
    set c_arcane            = GetUnitCount(ARCANE_TOWER)
    set c_aviary_done       = GetUnitCountDone(AVIARY)
    set c_breaker_done      = GetUnitCountDone(SPELL_BREAKER)
    set c_barracks_done     = GetUnitCountDone(BARRACKS)
    set c_castle_done       = TownCountDone(CASTLE)
    set c_footman_done      = GetUnitCountDone(FOOTMAN)
    set c_gold              = GetGold()
    set c_gold_owned        = GetGoldOwned()
    set c_gryphon_done      = GetUnitCountDone(GRYPHON)
    set c_gyro_done         = GetUnitCountDone(COPTER)
    set c_hall              = TownCount(TOWN_HALL)
    set c_hall_done         = TownCountDone(TOWN_HALL)
    set c_hawk_done         = GetUnitCountDone(HUMAN_DRAGON_HAWK)
    set c_hero1_done        = GetUnitCountDone(hero_id)
    set c_hero2_done        = GetUnitCountDone(hero_id2)
    set c_hero3_done        = GetUnitCountDone(hero_id3)
    set c_house             = GetUnitCount(HOUSE)
    set c_house_done        = GetUnitCountDone(HOUSE)
    set c_keep_done         = TownCountDone(KEEP)
    set c_knight_done       = GetUnitCountDone(KNIGHT)
    set c_mill_done         = GetUnitCountDone(LUMBER_MILL)
    if HarvestFix then
        set c_mines         = 2
    else
        set c_mines         = GetMinesOwned()
    endif
    set c_mortar_done       = GetUnitCountDone(MORTAR)
    set c_peasant           = GetUnitCount(PEASANT)
    set c_peasant_done      = GetUnitCountDone(PEASANT)
    set c_priest_done       = GetUnitCountDone(PRIEST)
    set c_rifleman_done     = GetUnitCountDone(RIFLEMAN)
    set c_sanctum_done      = GetUnitCountDone(SANCTUM)
    set c_smith_done        = GetUnitCountDone(BLACKSMITH)
    set c_sorceress_done    = GetUnitCountDone(SORCERESS)
    set c_tank              = GetUnitCount(TANK) + GetUnitCount(ROCKET_TANK)
    set c_tank_done         = GetUnitCountDone(TANK) + GetUnitCountDone(ROCKET_TANK)
    set c_watch             = TownCount(WATCH_TOWER)
    set c_watch_done        = TownCountDone(WATCH_TOWER)
    set c_guard             = GetUnitCount(GUARD_TOWER)
    set c_cannon            = GetUnitCount(CANNON_TOWER)
    set c_workshop_done     = GetUnitCountDone(WORKSHOP)
    set c_zep               = GetUnitCount(ZEPPELIN)
    set c_food_made         = GetUnitCountDone(TOWN_HALL) * GetFoodMade(TOWN_HALL) + GetUnitCountDone(KEEP) * GetFoodMade(KEEP) + GetUnitCountDone(CASTLE) * GetFoodMade(CASTLE) + c_house_done * GetFoodMade(HOUSE)
    set c_food_used         = FoodUsed()

    set b_hero1_done        = GetUnitCountDone(hero_id) >= 1
    set b_hero2_done        = GetUnitCountDone(hero_id2) >= 1
    set b_hero3_done        = GetUnitCountDone(hero_id3) >= 1
    set b_hero4_done        = GetUnitCountDone(hero_id4) >= 1
    set b_knights_ok        = c_castle_done>=1 and c_mill_done>=1 and c_smith_done>=1
    set b_tank_ok           = GetUpgradeLevel(UPG_TANK) > 0

    if basic_opening and (b_hero2_done or (MeleeDifficulty() == MELEE_NEWBIE and c_castle_done >= 1)) then
        set basic_opening = false
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  set_vars
//--------------------------------------------------------------------------------------------------
function set_vars takes nothing returns nothing
    loop
        call init_vars()
        call Sleep(1)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  do_upgrades
//--------------------------------------------------------------------------------------------------
function do_upgrades takes nothing returns nothing

    if c_keep_done >= 1 then

        call SetBuildUpgr( 1, UPG_WOOD )

        if c_castle_done >= 1 then
            call SetBuildUpgr( 2, UPG_WOOD )
        endif

        if b_knights_ok then
            call SetBuildUpgr( 1, UPG_BREEDING )
        endif
        if c_sanctum_done >= 1 then
            if c_priest_done >= 1 then
                call SetBuildUpgr( 1, UPG_PRAYING )
            endif
            if c_sorceress_done >= 1 then
                call SetBuildUpgr( 1, UPG_SORCERY )
            endif
        endif
        if c_castle_done >= 1 then

            call SetBuildUpgr( 2, UPG_WOOD )

            if c_sanctum_done >= 1 then
                if c_priest_done >= 1 then
                    call SetBuildUpgr( 2, UPG_PRAYING )
                endif
                if c_sorceress_done >= 1 then
                    call SetBuildUpgr( 2, UPG_SORCERY )
                endif
            endif
        endif
    endif
    if c_barracks_done > 0 then
        call SetBuildUpgr( 1, UPG_DEFEND )
    endif

    if c_smith_done >= 1 then
        call SetBuildUpgr( 1, UPG_ARMOR     )
        call SetBuildUpgr( 1, UPG_MELEE     )
        call SetBuildUpgr( 1, UPG_RANGED    )
        call SetBuildUpgr( 1, UPG_LEATHER   )

        if c_keep_done >= 1 then
            call SetBuildUpgr( 2, UPG_ARMOR     )
            call SetBuildUpgr( 2, UPG_MELEE     )
            call SetBuildUpgr( 2, UPG_RANGED    )
            call SetBuildUpgr( 2, UPG_LEATHER   )

            if c_castle_done >= 1 then
                call SetBuildUpgr( 3, UPG_ARMOR     )
                call SetBuildUpgr( 3, UPG_MELEE     )
                call SetBuildUpgr( 3, UPG_RANGED    )
                call SetBuildUpgr( 3, UPG_LEATHER   )
            endif
        endif
    endif
    if c_castle_done > 0 and c_barracks_done > 0 and c_knight_done > 3 and JASS_MAX_ARRAY_SIZE > 8192 then
        call SetBuildUpgr( 1, 'Rhsb'   )
    endif

    if c_barracks_done > 0 and c_rifleman_done >= 1 and c_castle_done >= 1 then
        call SetBuildUpgr( 1, UPG_GUN_RANGE )
    endif

    if c_workshop_done >= 1 and c_mortar_done >= 1 then 
        call SetBuildUpgr( 1, UPG_FRAGS )
        if c_mortar_done > 4 then
            call SetBuildUpgr( 1, UPG_SIGHT )
        endif
    endif

    if c_mill_done >= 1 then
        call SetBuildUpgr( 1, UPG_MASONRY )
        if c_keep_done >= 1 then
            call SetBuildUpgr( 2, UPG_MASONRY )
        endif
    endif

    if c_workshop_done >= 1 and c_gyro_done >= 1 then
        if c_castle_done >= 1 then
            call SetBuildUpgr( 1, UPG_FLAK )
        endif
        call SetBuildUpgr( 1, UPG_BOMBS )
    endif

    if c_aviary_done >= 1 and c_gryphon_done >= 1 then
        call SetBuildUpgr( 1, UPG_HAMMERS )
    endif

    if c_sanctum_done >= 1 and c_breaker_done >= 1 then
        call SetBuildUpgr( 1, UPG_CONT_MAGIC )
    endif

    if c_aviary_done >= 1 and c_hawk_done >= 1 then
        call SetBuildUpgr( 1, UPG_CLOUD )
    endif

    if c_workshop_done >= 1 and c_tank_done >= 1 then
        call SetBuildUpgr( 1, UPG_TANK )
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  build_sequence
//--------------------------------------------------------------------------------------------------
function build_sequence takes nothing returns nothing
    local integer peasants

    call InitBuildArray()

    if basic_opening then

        call MeleeTownHall( 0, TOWN_HALL )
        call MeleeTownHall( 1, TOWN_HALL )

        call SetBuildUnit(  6, PEASANT      )
        call SetBuildUnit(  1, HUMAN_ALTAR  )
        call SetBuildUnit(  7, PEASANT      )
        call SetBuildUnit(  1, HOUSE        )
        call SetBuildUnit(  1, BARRACKS     )
        call SetBuildUnit(  9, PEASANT      )
        call SetBuildUnit(  2, HOUSE        )
        call SetBuildUnit(  1, hero_id      )
        call SetBuildUnit( 11, PEASANT      )
        call SetBuildUnit(  1, FOOTMAN      )
        call SetBuildUnit(  3, HOUSE        )
        call SetBuildUnit( 12, PEASANT      )
        call SetBuildUnit(  2, FOOTMAN      )
        call SetBuildUnit( 13, PEASANT      )
        call SetBuildUnit(  3, FOOTMAN      )
        call SetBuildUnit( 14, PEASANT      )
        call SetBuildUnit(  4, HOUSE        )
        call SetBuildUnit( 15, PEASANT      )
        call SetBuildUnit(  4, FOOTMAN      )
        call SetBuildUnit( 16, PEASANT      )
        call SetBuildUnit(  5, FOOTMAN      )
        call SetBuildUnit(  1, BLACKSMITH   )
        call SetBuildUnit(  6, FOOTMAN      )
        call SetBuildUnit(  5, HOUSE        )
        call SetBuildUnit(  8, FOOTMAN      )
        call SetBuildUnit(  6, HOUSE        )
        call SetBuildUnit(  2, RIFLEMAN     )
        call SetBuildUnit(  7, HOUSE        )
        call SetBuildUnit(  3, RIFLEMAN     )
        call SetBuildUnit(  1, ARCANE_VAULT )
        call SetBuildUnit(  4, RIFLEMAN     )
        call SetBuildUnit(  1, LUMBER_MILL  )
        call SetBuildUnit(  1, KEEP         )
        call BasicExpansion( c_mines < 2, TOWN_HALL )

        if MeleeDifficulty() != MELEE_NEWBIE then
            call GuardSecondary( 1, 2, WATCH_TOWER  )
            if c_arcane < 2 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
                call GuardSecondary( 1, 1, ARCANE_TOWER )
            elseif c_mill_done > 0 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
                call GuardSecondary( 1, 1, GUARD_TOWER  )
            endif
        endif
        call GuardSecondary( 0, 2, WATCH_TOWER  )
        if c_arcane < 1 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
            call GuardSecondary( 0, 1, ARCANE_TOWER )
        elseif c_mill_done > 0 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
            call GuardSecondary( 0, 1, GUARD_TOWER  )
        endif
        call SetBuildUpgr(  1, UPG_DEFEND   )
        call SetBuildUpgr(  1, UPG_ARMOR    )
        call SetBuildUnit(  7, HOUSE        )
        call SetBuildUpgr(  1, UPG_MELEE    )

        if c_keep_done < 1 then
            return
        endif

        call SetBuildUnit(  1, WORKSHOP     )

        if MeleeDifficulty() != MELEE_NEWBIE then
            call SetBuildUnit(  1, hero_id2 )
        endif

        call SetBuildUpgr(  1, UPG_RANGED   )
        call SetBuildUnit(  1, SANCTUM      )
        call SetBuildUnit(  2, MORTAR       )
        call SetBuildUpgr(  1, UPG_WOOD     )
        call SetBuildUpgr(  2, UPG_ARMOR    )
        call SetBuildUpgr(  2, UPG_WOOD     )
        return
    endif

    // need a peasant or nothing will get built
    //
    if c_hall_done >= 1 then
        set peasants = 6 - GetWood() / 200
        if peasants < 3 then
            set peasants = 3
        endif
        if c_mines < 2 then
            set peasants = peasants + 5
        else
            set peasants = peasants + 10
        endif
        if peasants > 15 then
            set peasants = 15
        endif
        call SetBuildNext( peasants, PEASANT )
    endif

    // need a hall or we can't resource and make more peasants
    //
    if c_hall < 1 and c_peasant_done >= 1 then
        call MeleeTownHall( 0, TOWN_HALL )
        call MeleeTownHall( 1, TOWN_HALL )
        call MeleeTownHall( 2, TOWN_HALL )
    endif

    if c_gold > 500 and GetWood() < 100 then
        call SetBuildNext( 20, PEASANT )
    endif

    // if we have low gold in our mines then we need to expand
    //
    if c_gold_owned < 2000 then
        call BasicExpansion( c_mines < 2, TOWN_HALL )
        call GuardSecondary( 1, 2, WATCH_TOWER  )
        if c_watch_done - c_arcane - c_guard - c_cannon > 0 then
            if c_arcane < 3 then
                call GuardSecondary( 1, 1, ARCANE_TOWER )
            elseif c_mill_done > 0 then
                call GuardSecondary( 1, 1, GUARD_TOWER  )
            endif
        endif
    endif

    // get enough burrows to handle current food demand
    //
    if c_food_used + 5 >= c_food_made then
        call SetBuildUnit(  c_house_done + 1, HOUSE )
    endif

    // always rebuild heroes for defense
    //
    if c_altar_done >= 1 then
        if b_hero1_done then
            if b_hero2_done then
                if b_hero3_done or c_castle_done >= 1 then
                    call SetBuildUnit( 1, hero_id3 )
                    if b_hero4_done and GetUnitCount(hero_id4) == 0 then
                        call SetBuildUnit( 1, hero_id4 )
                    endif
                endif
            else
                call SetBuildUnit( 1, hero_id2 )
            endif
        else
            call SetBuildUnit( 1, hero_id )
        endif
    else
        call SetBuildUnit( 1, HUMAN_ALTAR )
    endif

    // minimum melee defense
    //
    call SetBuildUnit( 1, BARRACKS )
    if b_knights_ok then
        call SetBuildUnit( 2, KNIGHT    )
    else
        call SetBuildUnit( 4, FOOTMAN   )
    endif

    // minimum ranged/air defense
    //
    if c_aviary_done >= 1 then
        call SetBuildUnit( 3, GRYPHON    )
    else
        call SetBuildUnit( 1, BLACKSMITH )
        if c_smith_done >= 1 or c_gold < 1000 then
            call SetBuildUnit( 4, RIFLEMEN   )
        endif
    endif

    // siege attackers
    //
    call SetBuildUnit( 1, KEEP      )
    call SetBuildUnit( 1, WORKSHOP  )
    call SetBuildUnit( 2, MORTAR    )

    call SetBuildUnit( c_watch_done - c_arcane, GUARD_TOWER )
    
    // if we have a lot of gold then advance the tech tree
    //
    if c_gold > 1000 then
        call SetBuildUnit( 1, ARCANE_VAULT  )
        call SetBuildUnit( 1, BLACKSMITH    )
        call SetBuildUnit( 1, LUMBER_MILL   )
        call SetBuildUnit( 1, SANCTUM       )
        call SetBuildUnit( 1, CASTLE        )
        call SetBuildUnit( 1, AVIARY        )

        call do_upgrades()

        if c_gold > 2000 then
            call BuildFactory( BARRACKS     )
            call BuildFactory( SANCTUM      )
            call BuildFactory( AVIARY       )
        endif

        call SetBuildUpgr( 1, UPG_SENTINEL  )

    elseif c_food_used >= UPKEEP_TIER1 then
        call do_upgrades()
    endif

    call BasicExpansion( c_mines < 2, TOWN_HALL )

    if c_food_used >= UPKEEP_TIER2-10 and c_gold < 2000 then
        return
    endif

    // full up with more troops in general
    //
    if b_knights_ok then
        call SetBuildNext( 4, KNIGHT )
    endif

    if c_sanctum_done >= 1 then
        call SetBuildNext( 2, PRIEST        )
        call SetBuildNext( 1, SORCERESS     )
        call SetBuildNext( 1, SPELL_BREAKER )

        if c_aviary_done >= 1 then
            call SetBuildNext( 4, GRYPHON           )
            call SetBuildNext( 2, HUMAN_DRAGON_HAWK )
        endif

        if c_workshop_done >= 1 then
            call SetBuildNext( 2, COPTER )
            if c_cannon < 2 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
                call SetBuildUnit( 1, CANNON_TOWER        )
            endif
            if c_mortar_done < 3 and c_castle_done > 0 then
                if b_tank_ok then
                    call SetBuildUnit( 2, ROCKET_TANK)
                else
                  call SetBuildUnit( 2, TANK)
                endif
            endif
        endif

        call SetBuildNext( 2, SORCERESS     )
        call SetBuildNext( 1, SPELL_BREAKER )
    endif

    if c_gold_owned < 10000 then
        call BasicExpansion( c_mines < 3, TOWN_HALL )
        call GuardSecondary( 2, 3, WATCH_TOWER  )
        if c_arcane < 4 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
            call GuardSecondary( 2, 2, ARCANE_TOWER )
        elseif c_mill_done > 0 and c_watch_done - c_arcane - c_guard - c_cannon > 0 then
            call GuardSecondary( 2, 1, GUARD_TOWER )
        endif
    endif

    if c_food_used >= 60 and c_zep < 3 then
        call GetZeppelin()
    endif
    if c_food_made > 100 and c_food_made - c_food_used <= 5 then  // can build more food
        call SetBuildUnit( c_house + 1, HOUSE )
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  peon_assignment
//--------------------------------------------------------------------------------------------------
function InitMineCheck takes nothing returns nothing
    local group g = CreateGroup()
    local unit u = null
    local integer c = 0
    local integer n = 0
    local integer p = 1
    call GroupEnumUnitsInRangeOfLoc(g, homeloc, 1800, null)
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      if UnitAlive(u) and not IsUnitHidden(u) then  // fix home_location mine
        set n = 0
        if GetUnitTypeId(u) == 'ngol' and GetResourceAmount(u) > 0 then
          if c > 0 and town_mine == null then
            set town_mine = u
          endif
          set c = c + 1
        elseif (GetUnitTypeId(u) == 'egol' or GetUnitTypeId(u) == 'ugol') and GetResourceAmount(u) > 0 then
          set n = 1
        endif
        if GetOwningPlayer(u) != Player(GetAiPlayer()) and (IsUnitType(u, UNIT_TYPE_TOWNHALL) or n == 1) then
          set p = p + 1  // have more player , need fix harvest , but maybe no need fix expensive
        endif
      endif
      call GroupRemoveUnit(g, u)
    endloop
    set HarvestFix = c > p
    call DestroyGroup(g)
    set g = null
    call HarvestGold(0,3)
    call HarvestWood(0,2)  // Early triggering Harvest
endfunction

function HarvestMineFix takes unit mine returns nothing
    local group g = CreateGroup()
    local unit u = null
    local integer i = 0
    local integer delaypeon = 2
    call GroupEnumUnitsInRangeOfLoc(g, homeloc, 1800, null)
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null or i >= delaypeon
      if UnitAlive(u) and IsUnitType(u, UNIT_TYPE_PEON) and not IsUnitHidden(u) and GetOwningPlayer(u) == ai_player then
        if GetUnitCurrentOrder(u) == 0 or GetUnitCurrentOrder(u) == OrderId("harvest") then  // no get other order peon , maybe the peon go buy unit or build some
          call IssueTargetOrder(u, "harvest", mine)
          set i = i + 1
        endif
      endif
      call GroupRemoveUnit(g, u)
    endloop
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

function MineCheck takes nothing returns nothing
    local group g = null
    local unit u = null
    local integer i = 0
    if town_mine == null or GetResourceAmount(town_mine) <= 0 then  // find mine
        set g = CreateGroup()
        call GroupEnumUnitsInRangeOfLoc(g, homeloc, 1800, null)
        loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        if GetUnitTypeId(u) == 'ngol' and GetResourceAmount(u) > 0 and UnitAlive(u) and not IsUnitHidden(u) then
            if town_mine == null or GetResourceAmount(town_mine) <= 0 then  // find mine
                set town_mine = u
            endif
            set i = i + 1
        endif
        call GroupRemoveUnit(g, u)
        endloop
        call DestroyGroup(g)
        set g = null
    endif
    set HarvestFix = i > 0  // home_location no mine
    if HarvestFix and town_mine != null and GetResourceAmount(town_mine) > 0 and c_peasant_done > 11 then
      call HarvestMineFix(town_mine)
    endif
endfunction

function InitLaboratory takes nothing returns nothing
    local group g = CreateGroup()
    local unit u = null
    local integer i = 0
    if GetPlayerController(Player(12)) == MAP_CONTROL_CREEP then
      call GroupEnumUnitsOfPlayer(g, Player(15), null)
    else
      call GroupEnumUnitsOfPlayer(g, Player(27), null)
    endif
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      if GetUnitTypeId(u) == 'ngad' and UnitAlive(u) and not IsUnitHidden(u) then
        set laboratory[i] = u
        set i = i + 1
      endif
      call GroupRemoveUnit(g, u)
    endloop
    set laboratory[i] = null
    call DestroyGroup(g)
    set g = null
endfunction

function BuyShredder takes integer c returns nothing
    local integer i = 0
    if GetWood() > 200 and GetGold() > 800 and FoodSpace() > 5 and GetUnitCountDone('ngir') < 1 and c > GetRandomInt(0, 4) then
      loop
        exitwhen laboratory[i] == null or GetUnitCountDone('ngir') > 0
        if IsVisibleToPlayer(GetUnitX(laboratory[i]), GetUnitY(laboratory[i]), ai_player) then
            call IssueNeutralImmediateOrderById(ai_player, laboratory[i], 'ngir')
        endif
        set i = i + 1
      endloop
    endif
endfunction

function peon_assignment takes nothing returns nothing
    local integer T
    local integer c = 0
    loop
        call ClearHarvestAI()

        set T = TownWithMine()
        call HarvestGold(T,4)
        call HarvestWood(0,1)
        call HarvestGold(T,1)
        call HarvestWood(0,1)
        if HarvestFix and c == 0 then
            call MineCheck()
        endif
        set c = c + 1
        if c > 6 then
            set c = 0
        endif
        if c_hall_done > 1 and c_mines > 1 then
            call HarvestGold(T+1,5)
        endif

        call HarvestWood(0,15)

        call build_sequence()
        call BuyShredder(c)
        call Sleep(GetRandomInt(1,3))
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//	main
//--------------------------------------------------------------------------------------------------
function main takes nothing returns nothing
    call PickMeleeHero(RACE_HUMAN)
    call set_skills()
    call InitMineCheck()  // if home_location distance 1500 have more mine , ELF and UD cannot harvest (old war3 version distance need 2200+ ), this can fix
    call InitLaboratory()
    call StandardAI(function SkillArraysfix, function peon_assignment, function attack_sequence)
    call StartThread(function set_vars)
    call PlayGame()
endfunction
