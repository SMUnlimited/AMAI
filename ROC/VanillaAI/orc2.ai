//============================================================================
//  Orc Melee Strategic AI
//============================================================================
globals
    boolean startup         = true

    integer C_hunters       = 0
    integer C_grunt         = 0
    integer C_raiders       = 0
    boolean forge           = false
    boolean stronghold      = false
    boolean fortress        = false
    boolean bestiary        = false
    boolean lodge           = false
    boolean totem           = false
endglobals

//============================================================================
//  set_skills
//============================================================================
function set_skills takes nothing returns nothing
    //------------------------------------------------------------------------
    if hero_id == BLADE_MASTER then
    //------------------------------------------------------------------------
        set skills1[ 1] = MIRROR_IMAGE
        set skills1[ 2] = CRITICAL_STRIKE
        set skills1[ 3] = CRITICAL_STRIKE
        set skills1[ 4] = WIND_WALK
        set skills1[ 5] = MIRROR_IMAGE
        set skills1[ 6] = BLADE_STORM
        set skills1[ 7] = CRITICAL_STRIKE
        set skills1[ 8] = MIRROR_IMAGE
        set skills1[ 9] = WIND_WALK
        set skills1[10] = WIND_WALK
    endif
    //------------------------------------------------------------------------
    if hero_id2 == BLADE_MASTER then
    //------------------------------------------------------------------------
        set skills2[ 1] = MIRROR_IMAGE
        set skills2[ 2] = CRITICAL_STRIKE
        set skills2[ 3] = WIND_WALK
        set skills2[ 4] = CRITICAL_STRIKE
        set skills2[ 5] = CRITICAL_STRIKE
        set skills2[ 6] = BLADE_STORM
        set skills2[ 7] = MIRROR_IMAGE
        set skills2[ 8] = MIRROR_IMAGE
        set skills2[ 9] = WIND_WALK
        set skills2[10] = WIND_WALK
    endif

    //------------------------------------------------------------------------
    if hero_id == FAR_SEER then
    //------------------------------------------------------------------------
        set skills1[ 1] = CHAIN_LIGHTNING
        set skills1[ 2] = SPIRIT_WOLF
        set skills1[ 3] = CHAIN_LIGHTNING
        set skills1[ 4] = SPIRIT_WOLF
        set skills1[ 5] = CHAIN_LIGHTNING
        set skills1[ 6] = EARTHQUAKE
        set skills1[ 7] = SPIRIT_WOLF
        set skills1[ 8] = FAR_SIGHT
        set skills1[ 9] = FAR_SIGHT
        set skills1[10] = FAR_SIGHT
    endif
    //------------------------------------------------------------------------
    if hero_id2 == FAR_SEER then
    //------------------------------------------------------------------------
        set skills2[ 1] = CHAIN_LIGHTNING
        set skills2[ 2] = SPIRIT_WOLF
        set skills2[ 3] = CHAIN_LIGHTNING
        set skills2[ 4] = SPIRIT_WOLF
        set skills2[ 5] = CHAIN_LIGHTNING
        set skills2[ 6] = EARTHQUAKE
        set skills2[ 7] = SPIRIT_WOLF
        set skills2[ 8] = FAR_SIGHT
        set skills2[ 9] = FAR_SIGHT
        set skills2[10] = FAR_SIGHT
    endif

    //------------------------------------------------------------------------
    if hero_id == TAUREN_CHIEF then
    //------------------------------------------------------------------------
        set skills1[ 1] = SHOCKWAVE
        set skills1[ 2] = ENDURANCE_AURA
        set skills1[ 3] = SHOCKWAVE
        set skills1[ 4] = ENDURANCE_AURA
        set skills1[ 5] = SHOCKWAVE
        set skills1[ 6] = REINCARNATION
        set skills1[ 7] = ENDURANCE_AURA
        set skills1[ 8] = WAR_STOMP
        set skills1[ 9] = WAR_STOMP
        set skills1[10] = WAR_STOMP
    endif
    //------------------------------------------------------------------------
    if hero_id2 == TAUREN_CHIEF then
    //------------------------------------------------------------------------
        set skills2[ 1] = ENDURANCE_AURA
        set skills2[ 2] = WAR_STOMP
        set skills2[ 3] = WAR_STOMP
        set skills2[ 4] = ENDURANCE_AURA
        set skills2[ 5] = WAR_STOMP
        set skills2[ 6] = REINCARNATION
        set skills2[ 7] = ENDURANCE_AURA
        set skills2[ 8] = SHOCKWAVE
        set skills2[ 9] = SHOCKWAVE
        set skills2[10] = SHOCKWAVE
    endif
endfunction

//============================================================================
//  setup_force
//============================================================================
function setup_force takes nothing returns nothing
    call AwaitMeleeHeroes()

    loop
        exitwhen GetUnitCountDone(GRUNT)+GetUnitCountDone(RAIDER)+GetUnitCountDone(TAUREN) >= 4
        call Sleep(1)
    endloop

    call InitAssaultGroup()
    call RemoveInjuries()

    call SetAssaultGroup( 1, 9, hero_id         )
    call SetAssaultGroup( 0, 9, hero_id2        )
    call SetAssaultGroup( 0, 9, GRUNT           )
    call SetAssaultGroup( 0, 9, RAIDER          )
    call SetAssaultGroup( 0, 9, TAUREN          )
    call SetAssaultGroup( 0, 9, HEAD_HUNTER     )
    call SetAssaultGroup( 0, 9, WYVERN          )
    call SetAssaultGroup( 0, 9, WITCH_DOCTOR    )
    call SetAssaultGroup( 0, 9, SHAMAN          )
    call SetAssaultGroup( 0, 9, KODO_BEAST      )

    call SetInitialWave(10)
endfunction

//============================================================================
//  attack_sequence
//============================================================================
function attack_sequence takes nothing returns nothing
    local boolean needs_exp
    local boolean has_siege
    local boolean major_ok
    local boolean air_units

    loop
        exitwhen GetUnitCountDone(hero_id)>0
        call Sleep(2)
    endloop

    call StaggerSleep(0,2)
    loop
        loop
            exitwhen not CaptainRetreating()
            call Sleep(2)
        endloop

        call setup_force()

        set air_units        = GetUnitCountDone(WYVERN)>0
        set major_ok         = air_units or GetUnitCountDone(HEAD_HUNTER)>=2
        set needs_exp        = take_exp and major_ok
        set has_siege        = GetUnitCountDone(CATAPULT)>0
        set allow_air_creeps = major_ok

        call SingleMeleeAttack(needs_exp,has_siege,major_ok,air_units)
    endloop
endfunction

//============================================================================
//  init_booleans
//============================================================================
function init_booleans takes nothing returns nothing
    set C_hunters  = GetUnitCount(HEAD_HUNTER)
    set C_grunt    = GetUnitCount(GRUNT)
    set C_raiders  = GetUnitCount(RAIDER)
    set forge      = GetUnitCountDone(FORGE)>0
    set stronghold = TownCountDone(STRONGHOLD)>0
    set fortress   = TownCountDone(FORTRESS)>0
    set bestiary   = GetUnitCountDone(BESTIARY)>0
    set lodge      = GetUnitCountDone(LODGE)>0
    set totem      = GetUnitCountDone(TOTEM)>0
endfunction

//============================================================================
//  upgrade_sequence
//============================================================================
function upgrade_sequence takes nothing returns nothing

    //*** FORGE & BARRACKS UPGRADES ***
    //
    if forge then
        call SetBuildUpgr( 1, UPG_ORC_ARMOR  )
        call SetBuildUpgr( 1, UPG_ORC_MELEE  )
        call SetBuildUpgr( 1, UPG_ORC_RANGED )
        call SetBuildUpgr( 1, UPG_ORC_SPIKES )

        if C_hunters>=5 then
            call SetBuildUpgr( 1, UPG_ORC_REGEN )
        endif

        if stronghold then
            call SetBuildUpgr( 2, UPG_ORC_ARMOR  )
            call SetBuildUpgr( 2, UPG_ORC_MELEE  )
            call SetBuildUpgr( 2, UPG_ORC_RANGED )
            call SetBuildUpgr( 2, UPG_ORC_SPIKES )

            if fortress then
                call SetBuildUpgr( 1, UPG_ORC_BERSERK )
                call SetBuildUpgr( 3, UPG_ORC_ARMOR   )
                call SetBuildUpgr( 3, UPG_ORC_MELEE   )
                call SetBuildUpgr( 3, UPG_ORC_RANGED  )
                call SetBuildUpgr( 3, UPG_ORC_SPIKES  )
            endif
        endif
    endif

    //*** BESTIARY UPGRADES ***
    //
    if bestiary then
        if C_raiders>0 then
            call SetBuildUpgr( 1, UPG_ORC_ENSNARE )
            call SetBuildUpgr( 1, UPG_ORC_PILLAGE )
        endif

        if GetUnitCountDone(KODO_BEAST)>0 then
            call SetBuildUpgr( 1, UPG_ORC_WAR_DRUMS )
        endif

        if GetUnitCountDone(WYVERN)>0 then
            call SetBuildUpgr( 1, UPG_ORC_VENOM )
        endif
    endif

    //*** TOTEM UPGRADES ***
    //
    if totem and GetUnitCount(TAUREN)>0 then
        call SetBuildUpgr( 1, UPG_ORC_PULVERIZE )
    endif

    //*** LODGE UPGRADES ***
    //
    if lodge then
        if GetUnitCount(SHAMAN)>0 then
            if fortress then
                call SetBuildUpgr( 3, UPG_ORC_SHAMAN )
            elseif stronghold then
                call SetBuildUpgr( 2, UPG_ORC_SHAMAN )
            else
                call SetBuildUpgr( 1, UPG_ORC_SHAMAN )
            endif
        endif

        if GetUnitCount(WITCH_DOCTOR)>0 then
            if fortress then
                call SetBuildUpgr( 3, UPG_ORC_DOCS )
            elseif stronghold then
                call SetBuildUpgr( 2, UPG_ORC_DOCS )
            else
                call SetBuildUpgr( 1, UPG_ORC_DOCS )
            endif
        endif
    endif
endfunction

//============================================================================
//  forces_sequence
//============================================================================
function forces_sequence takes nothing returns nothing
    local integer farms = GetUnitCountDone(BURROW) + TownCountDone(GREAT_HALL)
    local integer count

    //*** RANGED FORCES ***
    //
    if farms < 6 then
        return
    endif
    call FoodPool( 12,  true,HEAD_HUNTER,2,  forge and fortress,WYVERN,4 )

    //*** SIEGE FORCES ***
    //
    if forge and stronghold then
        call SetBuildUnit( 1, CATAPULT )
    endif

    //*** CASTERS ***
    //
    if lodge then
        call SetBuildUnit( 2, SHAMAN )
    endif
    if farms < 7 then
        return
    endif
    if lodge then
        call SetBuildUnit( 1, WITCH_DOCTOR )
    endif
    if forge and bestiary then
        call SetBuildUnit( 1, KODO_BEAST )
    endif

    //*** HIGH UPKEEP ***
    //
    if farms < 8 then
        return
    endif
    if totem then
        call SetBuildUnit( 2, TAUREN )
    endif
endfunction

//============================================================================
//  build_melee
//============================================================================
function build_melee takes integer pool returns nothing
    call FoodPool( pool,  true,GRUNT,3,  bestiary,RAIDER,3 )
endfunction

//============================================================================
//  build_ranged
//============================================================================
function build_ranged takes integer pool returns nothing
    call FoodPool( pool,  true,HEAD_HUNTER,2,  forge and fortress,WYVERN,4 )
endfunction

//============================================================================
//  build_sequence
//============================================================================
function build_sequence takes nothing returns nothing
    local integer mines = GetMinesOwned()

    call InitBuildArray()
    call init_booleans()

    call MeleeTownHall( 0, GREAT_HALL )
    call MeleeTownHall( 1, GREAT_HALL )

    call SetBuildUnit( 6, PEON          )
    call BuildFactory(    ORC_BARRACKS  )
    call SetBuildUnit( 1, BURROW        )
    call SetBuildUnit(10, PEON          )
    call SetBuildUnit( 2, BURROW        )
    call SetBuildUnit( 1, GRUNT         )
    call SetBuildUnit( 1, ORC_ALTAR     )
    call SetBuildUnit( 2, GRUNT         )
    call SetBuildUnit( 1, hero_id       )

    call build_melee( 12 )
    call SetBuildUnit( 3, BURROW        )
    call SetBuildUnit( 1, FORGE         )

    call build_melee( 15 )
    call SetBuildUpgr( 1, UPG_ORC_ARMOR )

    call build_ranged( 4 )
    call SetBuildUnit( 1, STRONGHOLD    )

    call build_ranged( 6 )
    call SetBuildUpgr( 1, UPG_ORC_MELEE )

    call build_ranged( 8 )
    call SetBuildUnit( 4, BURROW        )

    call build_ranged( 10 )
    call SetBuildUpgr( 1, UPG_ORC_RANGED)

    if MeleeDifficulty() != MELEE_NEWBIE then
        call SetBuildUnit(  1, hero_id2     )
    endif

    call BasicExpansion( mines < 2, GREAT_HALL )

    if mines > 1 then
        call SetBuildUnit(15, PEON      )
    endif

    call forces_sequence()
    call upgrade_sequence()

    call GuardSecondary( 1, 1, BURROW          )
    call GuardSecondary( 1, 1, ORC_WATCH_TOWER )

    call GuardSecondary( 2, 1, BURROW          )
    call GuardSecondary( 2, 1, ORC_WATCH_TOWER )

    call SetBuildUnit( 6, BURROW        )
    call BuildFactory(    LODGE         )
    call BuildFactory(    BESTIARY      )
    call SetBuildUnit( 1, FORTRESS      )

    if C_raiders > 0 then
        call SetBuildUnit( 1, TOTEM     )
    endif

    if GetUnitCount(FORTRESS)>0 and GetUnitCount(ZEPPELIN)<3 then
        call GetZeppelin()
    endif

    call MeleeTownHall( 2, GREAT_HALL )

    call BasicExpansion( mines < 3, GREAT_HALL )
endfunction

//============================================================================
//  peon_asignment
//============================================================================
function peon_assignment takes nothing returns nothing
    local integer T
    loop
        call ClearHarvestAI()

        set T = TownWithMine()

        call HarvestGold(T,5)
        call HarvestWood(0,5)

        if TownCountDone(GREAT_HALL)>1 then
            call HarvestGold(T+1,4)
        endif

        call HarvestWood(0,10)

        call build_sequence()
        call Sleep(3)
    endloop
endfunction

//============================================================================
//	main
//============================================================================
function main takes nothing returns nothing
    set do_debug_cheats = GetAiPlayer()==1

    call PickMeleeHero(RACE_ORC)
    call set_skills()
    call StandardAI(function SkillArrays, function peon_assignment, function attack_sequence)
    call PlayGame()
endfunction
