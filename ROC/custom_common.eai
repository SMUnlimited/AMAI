#IFDEF GLOBAL
    playercolor        PLAYER_COLOR_MAROON             = null
    playercolor        PLAYER_COLOR_NAVY               = null
    playercolor        PLAYER_COLOR_TURQUOISE          = null
    playercolor        PLAYER_COLOR_VIOLET             = null
    playercolor        PLAYER_COLOR_WHEAT              = null
    playercolor        PLAYER_COLOR_PEACH              = null
    playercolor        PLAYER_COLOR_MINT               = null
    playercolor        PLAYER_COLOR_LAVENDER           = null
    playercolor        PLAYER_COLOR_COAL               = null
    playercolor        PLAYER_COLOR_SNOW               = null
    playercolor        PLAYER_COLOR_EMERALD            = null
    playercolor        PLAYER_COLOR_PEANUT             = null
    integer   bj_MAX_PLAYERS_AMAI                   =  12
    integer   bj_PLAYER_NEUTRAL_VICTIM_AMAI         =  13
    integer   bj_PLAYER_NEUTRAL_EXTRA_AMAI          =  14
    integer   bj_MAX_PLAYER_SLOTS_AMAI              =  16
    integer PLAYER_AMAI_NEUTRAL_PASSIVE             =  15
    integer PLAYER_AMAI_NEUTRAL_AGGRESSIVE          =  12
    boolean   legacyCamera = true
    boolean skillfix = false
#ELSE
function VersionCheck takes nothing returns nothing
    if GetPlayerController(Player(12)) != MAP_CONTROL_CREEP then
      set bj_MAX_PLAYERS_AMAI = 24
      set bj_MAX_PLAYER_SLOTS_AMAI = 26
      set bj_PLAYER_NEUTRAL_VICTIM_AMAI = 25
      set bj_PLAYER_NEUTRAL_EXTRA_AMAI = 26
      set PLAYER_AMAI_NEUTRAL_PASSIVE = 27
      set PLAYER_AMAI_NEUTRAL_AGGRESSIVE = 24
      set PLAYER_COLOR_MAROON             = ConvertPlayerColor(12)
      set PLAYER_COLOR_NAVY               = ConvertPlayerColor(13)
      set PLAYER_COLOR_TURQUOISE          = ConvertPlayerColor(14)
      set PLAYER_COLOR_VIOLET             = ConvertPlayerColor(15)
      set PLAYER_COLOR_WHEAT              = ConvertPlayerColor(16)
      set PLAYER_COLOR_PEACH              = ConvertPlayerColor(17)
      set PLAYER_COLOR_MINT               = ConvertPlayerColor(18)
      set PLAYER_COLOR_LAVENDER           = ConvertPlayerColor(19)
      set PLAYER_COLOR_COAL               = ConvertPlayerColor(20)
      set PLAYER_COLOR_SNOW               = ConvertPlayerColor(21)
      set PLAYER_COLOR_EMERALD            = ConvertPlayerColor(22)
      set PLAYER_COLOR_PEANUT             = ConvertPlayerColor(23)
    endif
    if (JASS_MAX_ARRAY_SIZE > 8192) then  //1.29 ~ 1.31 or higher
      set skillfix = true
    endif
endfunction

function GetBJMaxPlayers takes nothing returns integer
  return bj_MAX_PLAYERS_AMAI
endfunction

function BlzGroupAddGroupFast takes group whichGroup, group addGroup returns integer
  local group g = CreateGroup()
  local unit u = null
  local integer i = 0
  loop
    set u = FirstOfGroup(whichGroup)
    exitwhen u == null 
    call GroupAddUnit(g, u)
    call GroupRemoveUnit(whichGroup,u)
  endloop
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null 
    call GroupAddUnit(addGroup, u)
    set i = i + 1
    call GroupRemoveUnit(g,u)
    call GroupAddUnit(whichGroup, u)
  endloop
  call DestroyGroup(g)
  set g = null
  return i
endfunction

function BlzGroupRemoveGroupFast takes group whichGroup, group removeGroup returns integer
  local group g = CreateGroup()
  local unit u = null
  local integer i = 0
  loop
    set u = FirstOfGroup(whichGroup)
    exitwhen u == null 
    call GroupAddUnit(g, u)
    call GroupRemoveUnit(whichGroup,u)
  endloop
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null 
    call GroupRemoveUnit(removeGroup, u)
    set i = i + 1
    call GroupRemoveUnit(g,u)
    call GroupAddUnit(whichGroup, u)
  endloop
  call DestroyGroup(g)
  set g = null
  return i
endfunction

function BlzGroupGetSize takes group whichGroup returns integer
  local integer i = 0
  local unit u = null
  local group g = CreateGroup()
  loop
    set u = FirstOfGroup(whichGroup)
    exitwhen u == null 
    set i = i + 1
    call GroupAddUnit(g, u)
    call GroupRemoveUnit(whichGroup,u)
  endloop
  loop
    set u = FirstOfGroup(g)
    exitwhen u == null 
    call GroupRemoveUnit(g,u)
    call GroupAddUnit(whichGroup,u)
  endloop
  call DestroyGroup(g)
  set g = null
  return i
endfunction
#ENDIF